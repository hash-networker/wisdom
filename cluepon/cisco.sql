INSERT INTO `csco_text` VALUES (1292,'\'\'\'Fabric on the GSR:\'\'\'\n\nThe GSR utilizes a crossbar switch fabric. This provides connectivity between line cards and to the route processors.\n\n64 Byte Cells are used within the switching fabric. The \"Cisco Cell\" is comprised of an 8 byte header, 48 byte payload and 8 byte CRC. It takes roughly 160 nanoseconds to transmit a cell.\n\nUnicast and Multicast data & routing protocol packets are transmitting over the fabric.\n\nMulticast packets are replicated within the fabric and transmitted to the destination line cards by means of partial fufillment. (Busy line cards are sent copies later when they are not busy).\n\nLocal traffic on a line card still has to transit the fabric.\n\n2.5Gbps fabric has a 16 x 16 crossbar and uses the ESLIP algorithm for scheduling.\n\n10Gbps fabric has a 64 x 64 crossbar and uses multichannel matching algorithm for scheduling.\n\n\n\'\'\'Switch Fabric Cards (SFC) and Clock Scheduler Cards (CSC):\'\'\'\n\nTypically 5 switching fabrics (3 SFC and 2 CSC).\n\nFor some models (12410), there is a combined SFC/CSC card.\n\nFor proper operation, 4 fabric cards must be active at a time. This includes 3 CSC.\n\n* SCA - Scheduler Control ASIC (only on CSC). Arbitration of line card and RP request to transmit data through fabric.\n\n\n\'\'\'Cisco Cell In-Depth\'\'\'\n\nCisco Cell Header - 4 bytes\n\nPayload Header - 4 bytes\n\nPayload - 48 bytes\n\nCRC - 8 bytes\n\n\nFIA (Fabric Interface ASICs) performs segmentation and reassmbly for Cisco cells.\n\nThe cell header carries information regarding the disposition of the cell such as\nif cell starts or ends a packet.\n\nSending a Cisco Cell:\n\n\nDuring each clock period (160ns)\n\n* Sending line cards send a \'\'fabric request\'\' to the SCA\n* SCA runs the \'\'ESLIP\'\' scheduling algorithm\n* SCA returns a \'\'fabric grant\'\' to the line card\n* Line card responds with a \'\'fabric grant accept\'\'\n* SCA sets the crossbar for that cell clock\n* SCA listens for \'\'fabric backpressure\'\' to stop scheduling for a particular line card','utf-8');
INSERT INTO `csco_text` VALUES (1293,'\'\'\'Maintenance BUS (MBUS):\'\'\'\n\n\nThe MBUS provides out of band communications to line cards. It is a simple 1Mbps 2-wire serial interface based upon Controller Area Network (CAN) 2.0 spec (ISO 11898) - http://www.can-cia.org/can/\n\nA daughter card on every line card has its own CPU, CAN controller, A/D converter, dual CAN interface, SRAM, Flash and serial EEPROM. \n\n* CSCs and BusBoards can proxy and or multiplex MBUS signals for power supplies.\n\nControl pins reach into LED, Serial ID EEPROM, DC/DC power converter, clock select FPGA, temperature sensor and voltage sensors.\n\n* Logging messages can be enabled to be transmitted over MBUS rather than the fabric with IPC. This is done with the \"logging method mbus\" command.','utf-8');
INSERT INTO `csco_text` VALUES (1302,'','utf-8');
INSERT INTO `csco_text` VALUES (1315,'The Engine 6 linecard was Ciscos answer to providing 20Gbps to a slot. Rumor has it that these linecards are similarly designed to the Engine 4+ along with similar performance impacting issues.\n\n* 20Gbps to the fabric\n\n\nEngine 6:\n\n\n* 2 Port OC192 POS - Codename: Silverbullet\n* 8 Port OC48 POS - Codename: Octopus','utf-8');
INSERT INTO `csco_text` VALUES (1316,'Cisco 12.0S is currently (other than the IOS-XR that will operate on the GSR platform) the only image supported officially on the GSR platform. 12.0S is ran across the GSR, 7500, 10k and 7200 platforms. \n\nEach release of code is delievered as 12.0(XX)S, where XX is the latest release to have new features introduced. In addition, maintenance releases have their own sequential numbering scheme.\n\n\nFor example:\n12.0(23)S6 would be the 6th maintenance release of code for 23S.\n\n\nThe general rule is that new features are not introduced in maintenance releases, however, this is not always the case. Customers have been known to push for new functionality in maintenance releases. \n\nSome common 12.0S variants:\n\n\n12.0SZ - Special image for new hardware support\n\n12.0SX - ???\n\n12.0SV - Sprint special release to support BGP VPNs over L2TPv3\n\n12.0S(xx)S#a, b, c, etc (Ie: 12.0(26)S4b) - Special custom builds for particular customers\n\n\nThere is no 12.0(29)S for the GSR due to time commitments.\n\nThe CCMSBU (GSR, 7600, CRS-1 business unit) has taken over primary IOS development of 12.0S starting at 12.0(31)S.','utf-8');
INSERT INTO `csco_text` VALUES (1319,'Bugs are a common part of operating Cisco products. There are several reasons for bugs:\n\n* Issue in code\n* Issue in hardware\n* Regression bug - something modified in code to fix one bug resulted in breaking something else\n\nCisco has developed a system to catalog and track bugs and what they impact. Each bug is assigned a \"DDTS\" id, DDTS stands for Distributed Defect Tracking System. This information is viewable to the public via the Cisco Bug Tool. However, the view given to customers via the Bug Tool is essentially useless. The \"Fixed-In\" information is typically incorrect and the descriptions very vague. Cisco of course, has an internal tool with all the information one could want about the DDTS. You will need to work with your account team to obtain that detailed information, or atleast a sanitized version of it.\n\nThis section is for documenting DDTS information about specific bugs of interest','utf-8');
INSERT INTO `csco_text` VALUES (1323,'Anyone who has been working with Cisco equipment long enough should certainly have a collection of stories regarding running into software bugs, hardware issues, TAC personnel, account managers, system engineers and the like. Please feel free to share your stories here.','utf-8');
INSERT INTO `csco_text` VALUES (1324,'Several Cisco certifications exist today that make up their vast collection of tracks.\n\nAssociate Certifications\n* CCNA\n* CCDA\n\n\nProfessional Certifications\n* CCNP\n* CCSP\n* CCVP\n* CCIP\n* CCDP\n\n\nExpert Certifications\n* CCIE - Routing & Switching\n* CCIE - Security\n* CCIE - Service Provider\n* CCIE - Storage Networking\n* CCIE - Voice','utf-8');
INSERT INTO `csco_text` VALUES (1325,'Cisco 12.0S is currently (other than the IOS-XR that will operate on the GSR platform) the only image supported officially on the GSR platform. 12.0S is ran across the GSR, 7500, 10k, 10720  and 7200 platforms. \n\nEach release of code is delievered as 12.0(XX)S, where XX is the latest release to have new features introduced. In addition, maintenance releases have their own sequential numbering scheme.\n\n\nFor example:\n12.0(23)S6 would be the 6th maintenance release of code for 23S.\n\n\nThe general rule is that new features are not introduced in maintenance releases, however, this is not always the case. Customers have been known to push for new functionality in maintenance releases. \n\nSome common 12.0S variants:\n\n\n12.0SP - Temporary release vehicle to introduce support for 10720 (yellow brick)\n       - now EOL and integrated in main branch from 12.0(xx)S\n\n12.0SX - ???\n\n12.0SY -\n\n12.0SV - Sprint special release to support BGP VPNs over L2TPv3\n\n12.0SW - Sprint special release to support BGP VPNs over L2TPv3\n       - now EOL and integrated in main branch from 12.0(xx)S ?\n\n12.0SZ - Temporary release vehicle for additional features \n\n12.0S(xx)S#a, b, c, etc (Ie: 12.0(26)S4b) - Special custom builds for particular customers\n\n\nThere is no 12.0(29)S for the GSR due to time commitments.\n\nThe CCMSBU (GSR, 7600, CRS-1 business unit) has taken over primary IOS development of 12.0S starting at 12.0(31)S.','utf-8');
INSERT INTO `csco_text` VALUES (1331,'\'\'\'Route Processors\'\'\'\n\n\nThe route processor control data path for line cards via instructions transmitted over IPC on the fabric or the MBUS. The fabric method is the default and preferred method.\n\nThe MBUS connection is mainly present for the RP to download a boostrap image, collect or load diagnostic information or perform general maintenance.\n\nThe RP runs routing protocols, builds and distributes the routing table to line cards, handles general maintenance functions (booting line cards) and handles L2 control messages (PPP, HDLC, Frame-Relay, ARP, ATM OAM).\n\nThe RP maintains its own copy of the RIB, known as \'\'RP-FIB\'\'.\n\nRouting updates are forwarded from the RP-FIB to the line cards \'\'LC-FIB\'\'.\n\nEach LC-FIB entry corresponds to an interface which contains a MAC encapsulation string, output interface and MTU.\n\nFIB distribution is accomplished via reliable IPC (XDR) updates.\n\nUpdates are unicast across the fabric to all line cards.\n\n\n\'\'\'Hardware\'\'\'\n\n\'\'\'GRP\'\'\'\n\n* R5000 CPU - 200Mhz(aka P4)\n* 64 to 256(512)Mb of EDO RAM\n* MBUS Module\n* Tiger ASIC\n* CSAR ASIC\n* FIA ASIC\n* SLI ASIC\n* Power Modules\n* Two variants, GRP and GRP-B. GRP-B permits memory expansion to 512MB. It is reported that a standard GRP can be upgraded to 512MB as long as the bootrom image is upgraded to a specific version.\n\n\'\'\'PRP-1\'\'\'\n\n* MPC7450 PowerPC - 133Mhz IO, 667 Mhz Core\n* 32KB L1 cache, 256 KB L2 cache\n* 2MB external L3 cache using PB2 SRAMs @ 133 Mhz\n* 512MB to 2GB of PC133 SDRAM\n* 2 PCMCIA Type I or Type II slots\n* 64MB, 128MB or 1GB flash disks - 20MB linear flash still supported\n* 64MB bootflash\n* 2M NVRAM\n* 4 FrFab queues, 1 ToFab queue\n\n\'\'\'PRP-2\'\'\'\n\n* 1.3Ghz PowerPC CPU\n* 30-100% performance improvement over PRP-1\n* Default memory is 1GB\n* At 12.0(30)S, 4GB of memory will be supported\n* Gigabit Ethernet management port supported in 12.0(30)S and beyond\n* 2 BITS input ports (30S and beyond)\n* 40GB Disk Drive optional\n* 1GB flash on-board (for IOX)\n* 8 FrFab queues, 2 ToFab queues','utf-8');
INSERT INTO `csco_text` VALUES (1335,'#redirect [[Product Enhancement Requests]]','utf-8');
INSERT INTO `csco_text` VALUES (1361,'{{category-note}}','utf-8');
INSERT INTO `csco_text` VALUES (1362,'This is a Category containg all different Engine types of GSR linecards.','utf-8');
INSERT INTO `csco_text` VALUES (1376,'The Engine 6 linecard was Ciscos answer to providing 20Gbps to a slot. Rumor has it that these linecards are similarly designed to the Engine 4+ along with similar performance impacting issues.\n\n* 20Gbps to the fabric\n\n\nEngine 6:\n\n\n* 2 Port OC192 POS - Codename: Silverbullet\n* 8 Port OC48 POS - Codename: Octopus\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1382,'IOS-XR is the software platform for the CRS-1 and GSR routers.\nNot all GSR hardware is supported with IOS-XR:\n\n* Chassis: 12008/12012, 124xx (128xx to come)\n* [[Route Processors]]: PRP-1 or PRP-2 (GRP/GRP-B will not be supported)\n* [[Line Cards]]: [[Engine 3]] (ISE) and [[Engine 5]] (SIP) only.','utf-8');
INSERT INTO `csco_text` VALUES (1397,'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div align=\"right\" style=\"height: 2pt; overflow: auto\"><br />[http://www.marketingbuscadores.com marketing buscadores] [http://www.acceso24h.com  gestor contenidos] [http://www.biada.com  biada] [http://www.einnova.com  diseño paginas web barcelona] [http://www.posicionarweb.com posicionar web] [http://www.ticketsfc.com Barcelona v madrid tickets] [http://www.iese.edu General Management] [http://en.wikipedia.org/wiki/Main_Page free encyclopedia] [http://en.wikipedia.org/wiki/Aspirin aspirin] [http://aspirin.generic-help.com/ aspirin] [http://en.wikipedia.org/wiki/Ciprofloxacin ciprofloxacin] [http://ciprofloxacin.generic-help.com/ ciprofloxacin] [http://en.wikipedia.org/wiki/Clindamycin clindamycin] [http://clindamycin.generic-help.com/ clindamycin] [http://en.wikipedia.org/wiki/Promethazine promethazine] [http://promethazine.generic-help.com/ promethazine] [http://en.wikipedia.org/wiki/Hydrochlorothiazide hydrochlorothiazide] [http://hydrochlorothiazide.generic-help.com/ hydrochlorothiazide] [http://en.wikipedia.org/wiki/Gabapentin gabapentin] [http://gabapentin.generic-help.com/ gabapentin] [http://en.wikipedia.org/wiki/Albuterol albuterol] [http://albuterol.generic-help.com/ albuterol] [http://en.wikipedia.org/wiki/Azithromycin azithromycin] [http://azithromycin.generic-help.com/ azithromycin] [http://en.wikipedia.org/wiki/Acetaminophen acetaminophen] [http://acetaminophen.generic-help.com/ acetaminophen] [http://en.wikipedia.org/wiki/Metoprolol metoprolol] [http://metoprolol.generic-help.com/ metoprolol] [http://en.wikipedia.org/wiki/Diclofenac diclofenac] [http://diclofenac.generic-help.com/ diclofenac] [http://en.wikipedia.org/wiki/Citalopram citalopram] [http://citalopram.generic-help.com/ citalopram] [http://en.wikipedia.org/wiki/Tamoxifen tamoxifen] [http://tamoxifen.generic-help.com/ tamoxifen] [http://en.wikipedia.org/wiki/Estrogen estrogen] [http://estrogen.generic-help.com/ estrogen]  [http://en.wikipedia.org/wiki/Omeprazole omeprazole] [http://omeprazole.generic-help.com/ omeprazole] [http://en.wikipedia.org/wiki/Loratadine loratadine] [http://loratadine.generic-help.com/ loratadine] [http://en.wikipedia.org/wiki/Tetracycline tetracycline] [http://tetracycline.generic-help.com/ tetracycline] [http://en.wikipedia.org/wiki/Erythromycin erythromycin] [http://erythromycin.generic-help.com/ erythromycin]  [http://en.wikipedia.org/wiki/Guaifenesin guaifenesin] [http://guaifenesin.generic-help.com/ guaifenesin]  [http://en.wikipedia.org/wiki/Ranitidine ranitidine] [http://ranitidine .generic-help.com/ ranitidine]  [http://en.wikipedia.org/wiki/Furosemide furosemide] [http://furosemide.generic-help.com/ furosemide]  [http://en.wikipedia.org/wiki/Paroxetine paroxetine] [http://paroxetine.generic-help.com/ paroxetine] [http://en.wikipedia.org/wiki/Pseudoephedrine pseudoephedrine] [http://pseudoephedrine.generic-help.com/ pseudoephedrine] [http://en.wikipedia.org/wiki/Bupropion bupropion] [http://bupropion.generic-help.com/ bupropion]  [http://en.wikipedia.org/wiki/Finasteride finasteride] [http://finasteride.generic-help.com/ finasteride] [http://en.wikipedia.org/wiki/Verapamil verapamil] [http://verapamil.generic-help.com/verapamil/ verapamil] [http://en.wikipedia.org/wiki/Quinine quinine] [http://quinine.generic-help.com/quinine/ quinine] [http://en.wikipedia.org/wiki/Temazepam temazepam] [http://temazepam.generic-help.com/temazepam/ temazepam] </div>','utf-8');
INSERT INTO `csco_text` VALUES (1400,'This category collects all the 6500 linecard types.','utf-8');
INSERT INTO `csco_text` VALUES (1409,'There are 2 types of FlexWAN cards for the 6500 series - each takes 2 7200-type Port Adapters:\n\n\n{| border =1\n! Card || Model || Fabric connection\n|-\n|2 port adapter FlexWAN || WS-X6182-2PA || Classic Bus\n|-\n|2 port adapter Enhanced FlexWAN || WS-X6582-2PA || SFM x1\n|}','utf-8');
INSERT INTO `csco_text` VALUES (1410,'There are many types of Optical Services Module cards for the 6500 series:\n\n\n{| border =1\n! Card || Model || Fabric connection\n|-\n|4 port gigabit GE || OSM-4GE-WAN-GBIC || SFM x1\n|}','utf-8');
INSERT INTO `csco_text` VALUES (1411,'There are several types of Multi Service Feature Cards for the 6500 series:\n\n\n{| border =1\n! Card || Model || Fabric connection\n|-\n|Cat6k MSFC 2 daughterboard || WS-F6K-MSFC2 || \n|-\n|Cat6k MSFC 2A daughterboard || WS-F6K-MSFC2A || \n|-\n|MSFC3 Daughterboard || WS-SUP720 || \n|}','utf-8');
INSERT INTO `csco_text` VALUES (1421,'\'\'\'Line Cards\'\'\'\n\n\n[[Cisco GSR]] Line Cards can be classified by Engine type. This refers to how they connect to the fabric in the chassis. Each engine type has a set bandwidth limit.\n\n\n* [[Engine 0]] - 622Mbps - 200Kpps to 440Kpps\n\n* [[Engine 0]] Plus - 622Mbps - 200Kpps to 440Kpps\n\n* [[Engine 1]] - 622Mbps or 2.5Gbps - 130Kpps to 720Kpps\n\n* [[Engine 2]] - 2.5Gbps - 1.5Mpps to 4Mpps\n\n* [[Engine 3]] - 2.5Gbps - 3Mpps to 4Mpps\n\n* [[Engine 4]] - 10Gbps\n\n* [[Engine 4 Plus]] - 10Gbps - 11Mpps to 25Mpps\n\n* [[Engine 5]] - 10Gbps - 16Mpps\n\n* [[Engine 6]] - 40Gbps - 31Mpps to 50Mpps\n\n\nLine card switching engines and ASICs\n\n\n* Engine 0 - BMA\n\n* Engine 1 - Salsa/BMA48\n\n* Engine 2 - PSA/TBM/RBM \n\n* Engine 3 (ISE) - Alpha/Conga/Radar\n\n* Engine 4 - RX/MCC/TX\n\n* Engine 4+ - RX+/MCC/TX+\n\n* Engine 5 - Wahoo/Piranha/Stingray\n\n* Engine 6 - Hermes/Ares/Hera\n\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1427,'#REDIRECT [[Engine 1]]','utf-8');
INSERT INTO `csco_text` VALUES (1445,'','utf-8');
INSERT INTO `csco_text` VALUES (1454,'\n[[Category:Router]]\n\n\'\'\'Cisco 12000 Series Gigabit Switch Router (GSR)\'\'\'\n\n== History ==\n\nInternal code name: BFR [Big \'Fast\' Router - an homage to Doom\'s BFG 9000]\n(The references to this code name can be seen in various bootstrap messages and on some hardware)\n\nThe Cisco GSR is a router developed in the mid 1990s to provide network service providers with the next generation of routing technologies. Previously, [[Cisco 7500]]s were used as the backbone of many networks.\n\n== Models ==\n\nThere are several GSR variants today:\n\n* 12006 - Code Name: Sushi\n* 12008 \n* 12010 - Code Name: Sushi\n* 12012\n* 12016\n* 12404 - Code Name: Toddler\n* 12406 - Code Name: Quarter Dome\n* 12410 - Code Name: Half Dome\n* 12416 - Code Name: Magma\n* 12810 - Code Name: Silver Bullet-10\n* 12816 - Code Name: Silver Bullet-16\n\n[[GSR-Info]] quick reference guide\n\n== Anatomy ==\n\n* [[Fabric]]\n* [[MBUS]]\n* [[Route Processors]]\n* [[Line Cards]]\n* [[Alarm Cards, Power & Cooling]]\n\n== Software ==\n\n* [[IOS-12.0S]]\n* [[IOS-XR]]\n\n== External links ==\n\n* [http://en.wikipedia.org/wiki/Cisco_12000 Cisco 12000 on Wikipedia]','utf-8');
INSERT INTO `csco_text` VALUES (1455,'\nArticles about Cisco routers.\n\n[[Category:Categories]]','utf-8');
INSERT INTO `csco_text` VALUES (1456,'Articles about Cisco routers.\n\n[[Category:Categories]]','utf-8');
INSERT INTO `csco_text` VALUES (1457,'\nMain Category','utf-8');
INSERT INTO `csco_text` VALUES (1458,'Main Category','utf-8');
INSERT INTO `csco_text` VALUES (1460,'\nArticles covering Cisco Catalyst switches.','utf-8');
INSERT INTO `csco_text` VALUES (1462,'\n[[Category:Router]]\n\n\'\'\'Cisco 7500 Series modular router\'\'\'\n\nThe Cisco 7500 was developed in the early 1990s as an evolution of the [[7000]] series.\nThis box has pluggable adaptors (PAs) into Versatile Interface Processors (VIPs)\ninstead of one solid linecard. Also this model contains a Route Switch Processor (RSP)\nwhich is the routing processor and the switching processor combined on one card.\n\nIts backplane, the CyBus, runs at double the speed (1.2&nbsp;Gbps) of the 7000\'s CxBus.\n\nA later variant and current shipping chassis also include a TDM backplane bus to allow hairpinning of DS0 channels.  These chassis can be recognised by the \'MX\' suffix.\n\nThe 7576 is actually two routers sharing a common chassis and PSUs, with the restriction that there can only be one RSP per router.  The CyBus connects to slots in the following combinations: 0/1/3/5, 2/4, 8/10/12 & 9/11.\n\nChassis variants:\n\n* [[7505]]  (EOL/EOS Since April 12 2005) - 5 slots, 1 RSP, 1 Power, 1 CyBus\n* [[7507]]  - 7 slots, 2 RSP, 2 Power, 2 CyBus\n* [[7513]]  - 13 slots, 2 RSP, 2 Power, 2 CyBus\n* [[7576]]  (EOL/EOS Since March 8 2001) - (7 slots, 1 RSP, 2 CyBus) + (6 slots, 1 RSP, 2 CyBus), 2 shared Power\n\n\nRoute Switch Processors:\n\n* [[RSP1]] \n* [[RSP2]]\n* [[RSP4]]\n* [[RSP4 plus]]\n* [[RSP8]]\n* [[RSP16]]\n\n\n7500 Specific cards:\n\n* [[FEIP]]\n* [[GEIP]]\n* [[GEIP+]]\n* [[POSIP]]\n* [[SRPIP]]\n* [[VIP]]','utf-8');
INSERT INTO `csco_text` VALUES (1466,'[[Category:Switch]]\n\n= Information =\n\n= Products =\n\n* [[Cisco Catalyst 2950]]','utf-8');
INSERT INTO `csco_text` VALUES (1467,'\n[[Category:Switch]]\n\n\n= Overview =\n\n= Tips =\n\n== How can I increase the size of the Catalyst 2950 vlan database behond 64 ==\n\nUnfortunately the IOS detects the platform (2950SX or 2950G) on which you are upgrading, and limits the VTP capabilities accordingly.\nSo, no change with IOS upgrade on a standard 2950.','utf-8');
INSERT INTO `csco_text` VALUES (1470,'>>Setting this parameter too low may cause EBGP sessions to fail.\n\nFunkboy, what do you mean by this?  This parameter only controls the amount of TTL exceeded messages that are generated.\n[[User:Aaronw|Aaronw]] 23:03, 25 December 2006 (GMT)','utf-8');
INSERT INTO `csco_text` VALUES (1474,'\nArticles discussing Cisco protocols.','utf-8');
INSERT INTO `csco_text` VALUES (1475,'* Email [mailto:clinton@scripty.com Clinton Work]','utf-8');
INSERT INTO `csco_text` VALUES (1481,'SIP is the hardware specific carrier card which accepts one or more SPA cards.\n\nSIP is to 7500 VIP as SPA is to PA.','utf-8');
INSERT INTO `csco_text` VALUES (1482,'>>Setting this parameter too low may cause EBGP sessions to fail.\n\n> Funkboy, what do you mean by this?  This parameter only controls the amount of TTL exceeded messages that are generated.\n[[User:Aaronw|Aaronw]] 23:03, 25 December 2006 (GMT)\n\nTechnically, my understanding is that \"mls rate-limit all ttl-failure\" limits the number of packets/sec with a TTL of 1 that can be punted to the CPU.  Unfortunately, this seems to include non-multihop EBGP messages (set it too low on a box with lots of EBGP neighbors and watch them slowly timeout...).  The various MLS rate limiters are implemented at the PFC level, and do not directly control the number of responses generated by the CPU on the MSFC.\n\nSee http://cisco.com/en/US/products/hw/switches/ps708/products_white_paper0900aecd802ca5d6.shtml in addition to the normal config guides and command references.','utf-8');
INSERT INTO `csco_text` VALUES (1483,'The Engine line card is a software (CPU based) linecard. This means that while there are less limitations on features, increased traffic can drive up CPU utilization. The adding of specific features can easily raise the CPU utilization to levels where packets may drop.\n\n\n* 622 Mbps connection to fabric\n\n\nEngine 0 - lists as \'\'\'L3 Engine: 0 - OC12 (622 Mbps)\'\'\'\n{| border = 1\n!Card || Part Name (FRU) || Part Number (MAIN)|| Codename \n|-\n|4 Port OC3 POS SM || LC-4OC3/POS-SM || 800-2389-02 || Unknown\n|-\n|4 Port OC3 POS MM || LC-4OC3/POS-MM || 800-2396-02 || Unknown\n|-\n|4 Port OC3 POS SM LR || LC-4OC3/POS-LR-SC || 800-4215-01 || Unknown\n|-\n|1 Port OC12 POS || LC-1OC12/POS-SM || 800-2529-03 || Unknown\n|-\n|4 Port OC3 ATM ||  4OC3/ATM-IR-SC || 800-3873-02 || ATM Deluxe-OC3\n|-\n|1 Port OC12 ATM || LC-1OC12/ATM-SM || 800-2388-02 || Unknown\n|-\n|1 Port Channelized OC12 -> DS3 || LC-OC12-DS3 || 800-3176-02 || Jaguar\n|-\n|1 Port Channelized OC12 -> OC3 || Unknown || Unknown || Raptor\n|-\n|6 Port Serial DS3 || 6DS3-SMB-B || 800-5022-02 || Ocelot\n|-\n|12 Port Serial DS3 || 12DS3-SMB-B || 800-5023-02 || Ocelot\n|}\n\nEngine 0 Plus:\n\n* 6 and 12 Port Serial E3 - Codename: Cheetah\n* 6 Port Channelized DS3 -> DS1 - Codename: Blizzard\n* 2 Port Channelized OC3 -> DS1/E1 - Codename: Frost\n\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1485,'The Engine 4+ linecard provided everything that was lacking in the standard Engine 4 release. It is labeled an \"Enhanced Services\" revision in some documentation rather than Engine 4+. This linecard can handle multiple features enabled at once except for a few corner cases where MPLS may not mix with some things such as uRPF. The RX+ ASIC provides a non-programmable high-speed ASIC with 25Mpps switching capacity. A vCAM (virtual cam) is used to provide ACLs, CAR and PBR.\n\nA nice addition to the GSR family was the modular Gigabit Ethernet linecard nicknamed the \"Tango\". This linecard by default comes with 1 fixed Gigabit Ethernet interface and 3 EPA module slots. The EPA module has 3 interfaces for SFPs allowing you to populate 10 Gigabit Ethernet interfaces into one linecard. While this approach does work well in locations where you need to constantly add more Gigabit Ethernet interfaces as you grow, it has one drawback. The EPA modules are \'\'\'not\'\'\' hot-swappable and result in the operator having to remove the linecard to install an EPA module.\n\n\n* 10Gbps connection to the fabric\n\n* Engine 4+ - lists as \'\'\'L3 Engine: 4 - Enhanced Services OC192/QOC48 (10 Gbps)\'\'\'\n{| border = 1\n!Card || Part Name (FRU) || Part Number (MAIN)|| Codename \n|-\n|1 Port 10-Gigabit Ethernet || 1x10GE-LR-SC= || 800-20017-09 || Ashara\n|-\n|10 Port Modular Gigabit Ethernet || EPA-GE/FE-BBRD || 800-15675-02 || Tango\n|-\n|1 Port OC192 POS SR - Edge Release || OC192E/POS-SR-SC || 800-18668-06 || Unknown\n|-\n|1 Port OC192 POS IR - Edge Release || OC192E/POS-IR-SC || 800-18670-02 || Unknown\n|-\n|1 Port OC192 POS VSR - Edge Release || OC192E/POS-VSR || 800-19043-02 || Unknown\n|-\n|4 Port OC48 POS SR - Edge Release || 4OC48E/POS-SR-SC || 800-18672-02 || Unknown\n|-\n|4 Port OC48 DPT || Unknown || Unknown || Dense-48\n|-\n|1 Port OC192 DPT || Unknown || Unknown || Merlin-192\n|}\n\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1491,'The Engine 3 (or ISE, Internet Services Engine) was Ciscos attempt to make a feature-rich linecard targeted for the edge of the network where multiple features are required. It was designed with a programmable hardware-based forwarding engine. TCAMs are utilized on this platform to deliver advanced feature processing. The ALPHA (Advanced Layer 3 Packet Handling ASIC) is what handles the high-speed feature processing with its own TCAM each. The only drawback is that the linecard still uses a 2.5Gbps connection to the fabric. This makes such things as the 4 Port Gigabit Ethernet a sad encore performance of the 3 Port Gigabit Ethernet linecard. \n\nThis linecard is one of two GSR linecard types that is supported in IOS-XR for the GSR platform. Rumor is because of its architecture utilizing TCAMs is the reason why the Engine 3 is supported.\n\nThe Engine 3 linecards also had a late introduction to the market. For various reasons, the [[Engine 4]] linecard was released first before most of the Engine 3 models were ready.\n\nThere is also a carrier card (SIP) that operates as an Engine 3 linecard. This carrier card can have SPAs be inserted to offer a similar architecture of PAs and VIPs.\n\n\n* 2.5Gbps to the fabric\n\n\nEngine 3:\n\n* 4 Port OC12 POS - Codename: Jag48\n* 4 Port Channelized OC12 -> OC3 -> DS3 - Codename: Jag48\n* 8/16 Port OC3 POS - Codename: Jag48\n* 1 Port OC48 POS - Codename: Jag48\n* 1 Port Channelized OC48 -> DS3 - Codename: Jag48\n* 4/8 Port OC3 POS - Codename: Silverado\n* 1 Port Channelized OC12 -> DS1 - Codename: Frosbite\n* 4 Port Gigabit Ethernet - Codename: Tetra\n* 4 Port OC3 ATM - Codename: Arava\n* 4 Port OC12 ATM - Codename: Pinnacle\n* 4 Port OC12 DPT - Codename: Merlin Edge\n\nEngine 3 SPAs:\n\n* 2 Port Channelized DS3 SPA - Codename: Patriot\n* 4 Port Channelized DS3 SPA - Codename: Patriot\n* 2 Port T3/E3 SPA - Codename: Javelin\n* 4 Port T3/E3 SPA - Codename: Javeline\n\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1492,'The Engine 4 linecard was released as a \"Time-to-Market\" linecard to compete with the Juniper OC-192 offerings. Anything typically rushed does not typically turn out so well, and this linecard was another example of it. This linecard can do \'\'\'NO\'\'\' features other than simply forwarding IP and MPLS. As such, Cisco labled this as a \"Backbone Release\" for its 4 Port OC48 and 1 Port OC192. Two additional 10 Port Gigabit Ethernet linecards were made with similar feature limitations. The 2nd 10 Port Gigabit Ethernet linecard having additional capability for more memory.\n\nMost service providers have traded this linecard in to upgrade to the Engine 4+ series.\n\n\n* 10Gbps to the fabric\n\n\nEngine 4 - lists as \'\'\'L3 Engine: 4 - Backbone OC192/QOC48 (10 Gbps)\'\'\'\n{| border = 1\n!Card || Part Name (FRU) || Part Number (MAIN)|| Codename \n|-\n|4 Port OC48 POS SR - Backbone Release || 4OC48/POS-SR-SC || 800-5517-01 || Unknown\n|-\n|4 Port OC48 POS LR - Backbone Release || 4OC48/POS-LR-SC || 800-7928-03 || Unknown\n|- \n|1 Port OC192 POS SR - Backbone Release || OC192/POS-SR-SC || 800-5515-03 or 800-5515-01 || Unknown\n|-\n|1 Port OC192 POS SR2 - Backbone Release || OC192/POS-SR2-SC || 800-17536-01 || Unknown\n|-\n|1 Port OC192 POS VSR - Backbone Release || OC192/POS-VSR || 800-9004-01 || Unknown\n|-\n| 10 Port Gigabit Ethernet || 10X1GE-SFP-LC || 800-8816-01 || X\n|-\n| 10 Port Gigabit Ethernet (With additional memory support) || 10GE-SX/LH-LC-B || 800-19867-01 || X-B\n|}\n\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1494,'There is a weird problem about load balancing on 7600 with sup720 when doing eBGP with loopbacks (ECMP).\nIf you have an even number of links, one of them will always get more traffic than the others.\n\nThis is an excerpt of a reply I got from TAC:\n\n<pre>\n\nThe sup720 load balancing algorithm works by default in the following way:\n\n1: 1\n2: 7-8\n3: 1-1-1\n4: 1-1-1-2\n5: 1-1-1-1-1\n6: 1-2-2-2-2-2\n7: 1-1-1-1-1-1-1\n8: 1-1-1-2-2-2-2-2\n\nThis means that when you have 2 equal cost paths, \nload-sharing will be 46%-54%, not 50%-50%.\nIf on 3 equal cost paths, load-sharing will 33%-33%-33% (expected). \nWhen we have 4 paths, we will have 20%-20%-20%-40% and not \n25%-25%-25%-25% as we could expect.\n\nSup720 uses by default the load-sharing weight described earlier but there is a\nknob to change this behaviour.\nThis knob has been introduced in 12.2(17d)SXB2 and is then available in IOS\nrelease you are running.\nThe command is the following :\n\n(config)# mls ip cef load-sharing full simple\n\nTry using this command and the traffic should load-balance equally on th 4\npaths.\n\n\n</pre>\n\nAs an aside, another bug prevents this knob to work in SRA2.','utf-8');
INSERT INTO `csco_text` VALUES (1503,'#redirect [[6500 SPAN the RP]]','utf-8');
INSERT INTO `csco_text` VALUES (1514,'[[Category:Switch]]\n\n= Information =\n\n= Products =\n\n* [[Cisco Catalyst 2950]]\n* [[Cisco 3550]]','utf-8');
INSERT INTO `csco_text` VALUES (1515,'#redirect [[Cisco Catalyst 3550]]','utf-8');
INSERT INTO `csco_text` VALUES (1516,'[[Category:Switch]]\n\n= Information =\n\n= Products =\n\n* [[Cisco Catalyst 2950]]\n* [[Cisco Catalyst 3550]]','utf-8');
INSERT INTO `csco_text` VALUES (1517,'','utf-8');
INSERT INTO `csco_text` VALUES (1518,'[[Category:Switch]]\n\n[[Image:2950.jpg|thumb|right|Cisco 2950 Series Switchs]]\n== Introduction ==\n\nThese are the entry level stackable switches available with 12, 24 and 48 10/100mbit ports and a variety of uplinks.\n\nThe following variants support SI IOS software:\n\n* 2950-12\n* 2950-24\n* 2950SX-24\n* 2950SX-48-SI\n* 2950T-48-SI\n\nAnd the following support EI images (along with all 2950-LRE and 2955 variants):\n\n* 2950G-12-EI\n* 2950G-24-EI\n* 2950G-48-EI\n* 2950T-24\n\n\n== Tips and Tricks ==\n\n* EI images support 250 vlans and SI images have traditional been limited to 64 however as of 12.1(22)EA7 the number of supported vlans on the SI image has been increased to 128.\n\n* BEWARE: if you use the SSH feature then you may find it runs out of memory well before you can approach the maximum supported number of vlans on either image.','utf-8');
INSERT INTO `csco_text` VALUES (1519,'There are many options that can be configured on a 65xx/76xx to rate-limit traffic that is harmful to the router.\n\nThis page will attempt to explain some \'suggested\' community defaults and the reasoning behind them.\n\n{| border =1\n! Command || Scope || Effect || Notes\n|-\n| mls rate-limit all ttl-failure <number> <burst> || global || Limits ttl failure packets generated by the RP || There are apparently many devices out there that send packets out with a TTL that is far too low to make it to the destination.  This command will ensure that your RP does not get overloaded by sending out too many TTL exceeded packets.  A number of 100 and a burst of 10 seems to work well without having any untoward effects.  Setting this parameter too low may cause EBGP sessions to timeout (CSCsa50515).\n|}','utf-8');
INSERT INTO `csco_text` VALUES (1523,'The Engine 2 linecard introduced a new set of unique problems to operators. The PSA (Packet Switching ASIC) microcode allowed operators to load specific bundles of features onto the linecard depending on what features were enabled on the router in general. There were three main problems with this architecture:\n\n* If you had an E2 line card in your router and you outbound ACLs on a different engine type \'\'\'anywhere\'\'\' else on the router, \'\'\'all\'\'\' Engine 2 linecards would implement an inbound ACL, resulting in a change in the microcode bundle and disabling potentially other features enabled on the E2\'s.\n\n* Microcode bundles only permitted specific feature sets to be enabled on a line card at a time. For example, for several years you could not mix uRPF and Netflow on the same line card. This was later fixed in 12.0(23)S2. Still today there are similar situations where a microcode bundle does not support the specific feature set you would like to have enabled at a time.\n\n* Each microcode bundle had a set priority that the operator could not override. Simply enabling a feature could result in changing microcode bundles (resulting in dropped packets in the process to switch the bundle).\n\nThe 1 Port OC48 POS line card was also known to be used as a \"Tunnel Server\" card. This would permit service providers such as Sprint (who did not want to enable MPLS but rather L2TPv3 for L3VPNs) to perform GRE encapsulsation/de-encapsulation (as GSRs do not support GRE by default). This process burned an entire linecard/slot for the tunneling processing.\n\nOther complaints about this linecard is the 3 Port Gigabit Ethernet (Trident), this linecard clearly was oversubscribed and the \"3rd\" Gigabit Ethernet port would never be able to do line rate. \n\n\nACLs for example, have a drastic impact on performance:\n* 128 line input ACLs - 800kpps \n* 128 line output ACLs - 675kpps\n* 448 line input ACLs - 690kpps\n* 448 line output ACLs - 460kpps\n\n\n* 2.5Gbps connection to the fabric\n\n\n* Engine 2 - lists as \'\'\'Engine: 2 - Backbone OC48 (2.5 Gbps)\'\'\'\n{| border = 1\n!Card || Part Name (FRU) || Part Number (MAIN)|| Codename \n|-\n|4 Port OC12 POS IR || 4OC12/POS-IR-SC-B || 800-5491-03,800-12143-01 || Unknown\n|-\n|8 Port OC3 POS || 8OC3/POS-SM || 800-5599-02 || Scepter\n|-\n|16 port OC3 POS || 16OC3/POS-SM || 800-5413-01 || Scepter\n|-\n|4 Port OC12 ATM || 4OC12/STM-4 MM-SC ATM || 800-05669-03 || Inuit\n|-\n|8 Port OC3 ATM || 8OC03/ATM/TS-IR-B || 800-20641-02 || Taz\n|-\n|3 Port Gigabit Ethernet || 3GE-GBIC-SC || 800-6376-01 || Trident\n|-\n|1 Port OC48 DPT || OC48/STM-16 SRP-SR-SC-B || 800-05619-05 || Merlin-48\n|-\n|1 Port OC48 POS SR || OC48E/POS-SR-SC-B || 800-5271-02,800-12135-01 || Unknown\n|-\n|1 Port OC48 POS LR || OC48E/POS-LR-SC-B || 800-5414-01 || Unknown\n|-\n|1 Port OC192 POS - linecard with OC192 optics but 2.5Gb fabric connection || OC192R0/POS-SR-SC || Unknown || Comet\n|}\n\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1524,'The Engine 1 (Salsa) linecard is similar to the [[Engine 0]] linecard in that it is also software based (all packets handled by CPU processing). It is believed that this linecard was made as a \"Time-To-Market\" product as some linecards developed as Engine 1 are no longer being sold today. Specifically, Sprint was known to operate a 4 Port OC-12 linecard where the Engine 1 had the capability to connect to the fabric at OC48 (2.5Gbps speeds).\n\nThe 8 Port Fast Ethernet linecard is the only publically available Fast Ethernet linecard for the GSR today. There were plans for the Engine 4+ \"Tango\" line card to have EPA modules to support Fast Ethernet, but it appears have fallen through and this line card is the only option for copper Fast Ethernet. The one-port Gigabit Ethernet linecard was also plagued with problems in production environments due to earlier code not supporting common features (ie. ACLs). In addition, some features such as MAC accounting on the 1 Port Gigabit Ethernet card would render the line card useless at 600-700Mbps.\n\n\nContrary to the name, GE-SX/LH-SC takes a GBIC.\n\n\n* 622Mbps fabric connection\n* 2.5Gbps fabric connection on some line cards\n\n\nEngine 1 - lists as \'\'\'Engine: 1 - Standard OC48 (2.5 Gbps)\'\'\'\n{| border = 1\n!Card || Part Name (FRU) || Part Number (MAIN)|| Codename \n|-\n|8 Port Fast Ethernet Copper||8FE-TX-RJ45-B || 800-7801-01 || Eiffel\n|-\n|1 Port Gigabit Ethernet (non ECC) || GE-GBIC-SC-A || Unknown  || Unknown\n|-\n|1 Port Gigabit Ethernet (non ECC) || GE-SX/LH-SC || Unknown  || Unknown\n|-\n|1 Port Gigabit Ethernet (ECC) || GE-GBIC-SC-B || 800-3955-03 || Spigel\n|-\n| 2 Port OC12 DPT (Single-Ring DPT) || OC12/SRP-MM-SC-B || 800-07796-01 || Unknown\n|-\n|1 Port OC48 TTM || OC48/POS-SR-SC (?) || 800-4701-02 || Unknown\n|-\n|4 Port OC12 TTM || Unknown || Unknown || Unknown\n|}\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1526,'From http://tools.cisco.com/ITDIT/CFN/jsp/platformhelp.jsp:\n\n== CatOS ==\n\n1. CatOS system software for the Supervisor: CatOS provides primarily Layer 2 LAN Switching features only.\n* Select from CatOS Platforms: CAT6000-SUP, CAT6000-SUP2, CAT6000-SUP720\n\ndepending on Supervisor version installed.\n\n== Hybrid ==\n\n2. Hybrid mode, which requires both CatOS for the Supervisor and Cisco IOS for the Router card. In this mode, with both CatOS and IOS loaded, CatOS provides the Layer 2 features, IOS provide the Layer 3 and router-like features.\n* Select from CatOS Platforms: CAT6000-SUP, CAT6000-SUP2, CAT6000-SUP720\n* Select from IOS Platforms: CAT6000-MSFC, CAT6000-MSFC2, CAT6000-MSFC3\n\ndepending on combination of Supervisor and MSFC versions installed.\n\n== Native == \n\n3. Cisco IOS system software for both the Supervisor and the MSFC (Native): One single Cisco IOS software image provides both Layer 2 and Layer 3, router features thus avoiding the requirement for loading two separate software images.\n* Select from IOS Platforms: CAT6000-SUP1/MSFC1, CAT6000-SUP1/MSFC2, CAT6000-SUP2/MSFC2, CAT6000-SUP720/MSFC3\n\ndepending on combination of Supervisor and MSFC versions installed.','utf-8');
INSERT INTO `csco_text` VALUES (1531,'There is a weird problem about load balancing on 7600 with sup720 when doing eBGP with loopbacks (ECMP).\nIf you have an even number of links, one of them will always get more traffic than the others.\n\nThis is an excerpt of a reply I got from TAC:\n\n<pre>\n\nThe sup720 load balancing algorithm works by default in the following way:\n\n1: 1\n2: 7-8\n3: 1-1-1\n4: 1-1-1-2\n5: 1-1-1-1-1\n6: 1-2-2-2-2-2\n7: 1-1-1-1-1-1-1\n8: 1-1-1-2-2-2-2-2\n\nThis means that when you have 2 equal cost paths, \nload-sharing will be 46%-54%, not 50%-50%.\nIf on 3 equal cost paths, load-sharing will 33%-33%-33% (expected). \nWhen we have 4 paths, we will have 20%-20%-20%-40% and not \n25%-25%-25%-25% as we could expect.\n\nSup720 uses by default the load-sharing weight described earlier but there is a\nknob to change this behaviour.\nThis knob has been introduced in 12.2(17d)SXB2 and is then available in IOS\nrelease you are running.\nThe command is the following :\n\n(config)# mls ip cef load-sharing full simple\n\nTry using this command and the traffic should load-balance equally on th 4\npaths.\n\n\n</pre>\n\nAs an aside, another bug prevents this knob to work in SRA2. And it\'s not fixed in SRA3/4.','utf-8');
INSERT INTO `csco_text` VALUES (1532,'= Information =\n\n* [http://www.cisco.com/web/partners/tools/quickreference/ Portable Product Sheets - including Router Performance, Memory, Voice Density, etc.]\n\n= Smallest router for 2 full BGP feeds =\n\nCisco 1841 with sec/k9 or advanced routing (for BGP) and 384MB RAM, 64MB flash. It works but you didn\'t specify throughput requirements. I would guess that the 1841 could handle two 10Mbps connections.\n\n=  Smallest VPN/OSPF capable router =\n\n; Requirement :\nWe need a the cheapest (offcourse) router/firewall with 2 WAN interfaces (or trunkable WAN) that has accellerated VPN and runs OSPF. 2 tunnels accellerated is enough with 20-100Mbit throughput.\n\n\'\'\' Options \'\'\'\n* 2801 with AES128/SHA1/GRE encapsulating large packets and no AIM will come in around 20mbit/s (so you can infer that 1841 won\'t be quite enough), but with the AIM-VPN will bump up to around 40. \n* If you are planning any sort of routing or QoS or filtering, something a bit more beefy might be wise.  If you are going up to 100mbps, something like a 2851 or 3825 minimum, or a 3845 for some headroom.\n\n= DSL QoS for client site routers =\n\n[[Deployment_Applications/DSL_CPE_QoS]]','utf-8');
INSERT INTO `csco_text` VALUES (1533,'6500s can SPAN (port or vlan mirror) to GRE encapsulation, allowing mirroring over multiple layer3 hops. Very useful\n\nThis feature is ESPECIALLY useful on 6500s - see [[6500 SPAN the RP]] - allowing you to use the *hardware* to mirror the traffic that goes to the CPU\n\nThe following script runs on Linux (and possibly other Unices). It captures the GRE traffic and either outputs a summary or, if the -pcap argument is given, outputs an ethernet-style PCAP data stream (which can be piped to \"tcpdump -r -\")\n\nThis script is Licensed under the GPL version 2 ONLY\n\nThe script:\n\n<pre> \n#!/usr/bin/python\n#\n# Copyright 2007 - Phil Mayers phil dot mayers at gmail dot com\n# This software is licensed under the GPL version 2 ONLY\n\n# For the latest public version, check:\n#  http://cisco.cluepon.net/index.php/ERSPAN_to_PCAP_script\n\n#    This program is free software; you can redistribute it and/or modify\n#    it under the terms of version 2 of the the GNU General Public License\n#    as published by the Free Software Foundation\n#\n#    This program is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#    GNU General Public License for more details.\n#\n#    You should have received a copy of the GNU General Public License\n#    along with this program; if not, write to the Free Software\n#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n# This program opens a GRE socket and received Cisco ERSPAN (port mirror\n# over GRE) packets, and either outputs a one-line summary or if the -pcap\n# command line argument is given, outputs an \"ethernet\" pcap stream which\n# can be written to a file, or piped to \"tcpdump -r -\"\n\n# This program contains a number of assumptions that are probably only valid\n# in simple cases. There are a number of fields in the ERSPAN header that\n# undoubtedly indicate non-ethernet packets (e.g. for POS cards on 7600s)\n# but I don\'t have the hardware to test it, so can\'t verify that. It would\n# be wonderful if Cisco documented (or even RFCed!) the ERSPAN format. Then,\n# wireshark could implement it natively and it would all be good\n\n\n\nfrom socket import *\nimport struct\nimport time\nimport sys\n\n# magic, major_ver, minor_ver, gmt_offset, sigfigs, snaplen, captype\nPCAP_FILE_MAGIC = 0xa1b2c3d4L\nPCAP_FILE_MAJOR = 2\nPCAP_FILE_MINOR = 4\nPCAP_FILE_HEADER = \"IHHiIII\"\nPCAP_FILE_HEADER_LEN = struct.calcsize(PCAP_FILE_HEADER)\nPCAP_RECORD_HEADER = \"llII\"\nPCAP_RECORD_HEADER_LEN = struct.calcsize(PCAP_RECORD_HEADER)\n\ndef parseIP(d):\n        # parse an IP packet\n        b0 = ord(d[0])\n        version = b0 >> 4\n        if version!=4:\n                return {}\n        hlen = b0 & 0xf\n        hlen = hlen * 4\n        if hlen<20:\n                return {}\n        tos, dlen, id, flags, ttl, protocol, cksum = struct.unpack(\'>BHHHBBH\', d[1:12])\n        src, dst = [inet_ntoa(x) for x in (d[12:16], d[16:20])]\n        offset = flags & 0x1fff\n        df = flags & 0x4000\n        mf = flags & 0x2000\n        if hlen>20:\n                options = d[20:hlen-20]\n        else:\n                options = \'\'\n        payload = d[hlen:]\n        del d\n        return locals()\n\ns = socket(AF_INET, SOCK_RAW, IPPROTO_GRE)\nif \'-pcap\' in sys.argv[1:]:\n        pcap = True\n        sys.stdout.write(struct.pack(PCAP_FILE_HEADER, PCAP_FILE_MAGIC, PCAP_FILE_MAJOR, PCAP_FILE_MINOR, 0, 0, 65535, 1)) #pcap.DLT_EN10MB))\nelse:\n        pcap = False\n\nwhile True:\n        d, (ssrc ,port) = s.recvfrom(65535)\n        now = time.time()\n        sec = int(now)\n        usec = int((now-sec)*1000000)\n        pkt = parseIP(d)\n        if not pkt:\n                continue\n        elif pkt[\'protocol\']!=47:\n                continue\n        elif len(pkt[\'payload\'])<8+14+20:\n                # unknown+ether+ip\n                continue\n        # GRE\n        hdr, data = pkt[\'payload\'][:4], pkt[\'payload\'][4:]\n        f, proto = struct.unpack(\'>HH\', hdr)\n        f_1 = (f & 0xf000) >> 12\n        f_2 = (f & 0x0f00) >> 8\n        flg = (f & 0x00ff) >> 5\n        ver = (f & 0x0007)\n\n        if f_1 & 0x8:\n                cksum_present = True\n        else:\n                cksum_present = False\n\n        if f_1 & 0x4:\n                routing_present = True\n        else:\n                routing_present = False\n\n        if f_1 & 0x2:\n                key_present = True\n        else:\n                key_present = False\n\n        if f_1 & 0x1:\n                seq_present = True\n        else:\n                seq_present = False\n\n        if cksum_present or routing_present:\n                cksum, offset = struct.unpack(\'>HH\', data[:4])\n                data = data[4:]\n        else:\n                cksum = 0\n                offset = 0\n\n        if key_present:\n                key = struct.unpack(\'>I\', data[:4])\n                data = data[4:]\n        else:\n                key = 0\n        if seq_present:\n                seq, = struct.unpack(\'>I\', data[:4])\n                data = data[4:]\n        else:\n                seq = 0\n\n\n        unknown, rest = data[:8], data[8:]\n        if pcap:\n                sys.stdout.write(struct.pack(PCAP_RECORD_HEADER, sec, usec, len(rest), len(rest))+rest)\n                sys.stdout.flush()\n                continue\n        ethdst = \':\'.join([\'%02x\' % ord(x) for x in rest[:6]])\n        ethsrc = \':\'.join([\'%02x\' % ord(x) for x in rest[6:12]])\n        ethtype = ( ord(rest[12]) << 8 ) + ord(rest[13])\n        inner_payload = rest[14:]\n        if ethtype==0x800:\n                inner_pkt = parseIP(inner_payload)\n                if not inner_pkt:\n                        msg = \'- - -\'\n                else:\n                        msg = \'%(dst)s %(src)s %(protocol)i\' % inner_pkt\n        else:\n                msg = \'* * *\'\n\n        print ssrc, seq, \':\'.join([\'%02x\' % ord(x) for x in unknown]), ethdst, ethsrc, hex(ethtype), msg\n</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1534,'I got rid of the base64 encoded version and just wrapped the code in <pre> which works quite well in MediaWiki ~~~~</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1535,'I got rid of the base64 encoded version and just wrapped the code in pre which works quite well in MediaWiki  - [[User:Nemith|Nemith]] 23:00, 3 October 2007 (GMT)','utf-8');
INSERT INTO `csco_text` VALUES (1538,'The built-in capture buffer is very useful to look at the headers of traffic that is being interrupt switched so that you can diagnose the problem.\n\n\n* Turn on service internal.\n* Check to see that you have a PINNACLE ASIC in the supervisor.\n show plat cap buffer asic\n\n Slot Cpu   Asic   Inst Ver PB Elam Active Filter\n ---- --- -------- ---- --- -- ---- ------ ------\n 1    0   HYPERION 0    6.0 Y\n 1    0   PINNACLE 0    4.0 Y\n\n* Turn on the PINNACLE ASIC to capture traffic.  Specify the slot of the active supervisor, and port 4 - direction out - priority lo.  Ports 1 and 2 are the on-board GIGE ports, port 3 faces the SP, and port 4 faces the RP.  Direction out means out from the ASIC towards the RP, whereas direction in would mean traffic from the RP.  Priority lo refers to general IP traffic as opposed to high priority (routing protocols, etc).\n show plat cap buffer asic pinnacle slot 1 port 4 direction out priority lo\n\n* Capture data for 5 seconds (or so).\n show plat cap buffer collect for 5\n\n* Check the status of the capture session.\n show plat cap buffer status\n\n Slot Cpu   Asic   Inst Ver PB Elam\n ---- --- -------- ---- --- -- ----\n 1    0   PINNACLE 0    4.0 Y\n PB handling logical port 4, OUT direction, LOW queue\n COS mapped on it: 0 1 2 3 4 5 6 7\n CBL drops: 0\n buffer size is 400 Kbytes [0x3200 lines of 32 bytes each]\n it starts at 0xA600 [pointer is now 0xBF21]\n filtering DISABLED\n log is disabled. collection not intrusive. duration is 5 sec.\n collection completed\n 280 UNFILTERED samples collected\n\n* Then, look at the filtered samples.\n show plat cap buffer data filt\n\n* Once you find a particular sample, look at it in more detail.\n show plat cap buffer data sample 100\n\nDecoding the output is up to you, but generally speaking you will be able to find out a particular pattern of either DMACs, SMACs, or something else that will help you to narrow it down.','utf-8');
INSERT INTO `csco_text` VALUES (1539,'My main site: [[http://www.creative.net.au/]]','utf-8');
INSERT INTO `csco_text` VALUES (1541,'The built-in capture buffer is very useful to look at the headers of traffic that is being interrupt switched so that you can diagnose the problem.\n\nNote that this only works for interrupt switched traffic, i.e, that traffic that is causing the second % in your show proc cpu to be high.  If your IP Input is high that is process switched traffic, and is found via show buffers input-interface <interface> packet\n\n* Turn on service internal.\n* Check to see that you have a PINNACLE ASIC in the supervisor.\n show plat cap buffer asic\n\n Slot Cpu   Asic   Inst Ver PB Elam Active Filter\n ---- --- -------- ---- --- -- ---- ------ ------\n 1    0   HYPERION 0    6.0 Y\n 1    0   PINNACLE 0    4.0 Y\n\n* Turn on the PINNACLE ASIC to capture traffic.  Specify the slot of the active supervisor, and port 4 - direction out - priority lo.  Ports 1 and 2 are the on-board GIGE ports, port 3 faces the SP, and port 4 faces the RP.  Direction out means out from the ASIC towards the RP, whereas direction in would mean traffic from the RP.  Priority lo refers to general IP traffic as opposed to high priority (routing protocols, etc).\n show plat cap buffer asic pinnacle slot 1 port 4 direction out priority lo\n\n* Capture data for 5 seconds (or so).\n show plat cap buffer collect for 5\n\n* Check the status of the capture session.\n show plat cap buffer status\n\n Slot Cpu   Asic   Inst Ver PB Elam\n ---- --- -------- ---- --- -- ----\n 1    0   PINNACLE 0    4.0 Y\n PB handling logical port 4, OUT direction, LOW queue\n COS mapped on it: 0 1 2 3 4 5 6 7\n CBL drops: 0\n buffer size is 400 Kbytes [0x3200 lines of 32 bytes each]\n it starts at 0xA600 [pointer is now 0xBF21]\n filtering DISABLED\n log is disabled. collection not intrusive. duration is 5 sec.\n collection completed\n 280 UNFILTERED samples collected\n\n* Then, look at the filtered samples.\n show plat cap buffer data filt\n\n* Once you find a particular sample, look at it in more detail.\n show plat cap buffer data sample 100\n\nDecoding the output is up to you, but generally speaking you will be able to find out a particular pattern of either DMACs, SMACs, or something else that will help you to narrow it down.\n\n[http://cisco.com/en/US/products/hw/switches/ps708/products_tech_note09186a00804916e0.shtml Cat 6000 high cpu]','utf-8');
INSERT INTO `csco_text` VALUES (1542,'The Engine 5 linecard is actually Ciscos latest linecard despite the Engine 6 being released last year. This linecard is actually the SIP carrier card that Cisco is aiming to have their customers migrate to. The carrier card (SIP) is very similar to a VIP in the 7500 architecture. SPA modules are inserted into the SIP carrier card. It is also the only other linecard than the Engine 3 that is supported in IOS-XR.\n\n* 10Gbps to the fabric\n\n\nEngine 5 SIP - lists as \'\'\'L3 Engine: 5 - ISE OC192 (10 Gbps)\'\'\' or \'\'\'L3 Engine: 5 - ISE 10 Gbps\'\'\'\n\n{| border = 1\n!Card || Part Name (FRU) || Part Number (MAIN)|| Codename \n|-\n|SIP carrier || 12000-SIP-600 || 800-26102-02 || Bluenose\n|-\n|SIP carrier || 12000-SIP-601 || 68-2647-02 || ?\n|}\n\nEngine 5 SPA:\n\n{| border = 1\n!Card || Part Name (FRU) || Part Number (MAIN)|| Codename \n|-\n|1 Port 10-Gigabit Ethernet SPA || SPA-1XTENGE-XFP || Unknown || Scorpion\n|-\n|5 Port Gigabit Ethernet SPA || SPA-5X1GE || 68-2236-02 || Cricket\n|-\n|10 Port Gigabit Ethernet SPA ||SPA-10X1GE  || 68-2453-02 || Damselfly\n|-\n|1 Port OC192 POS SPA (XFP optics) || SPA-OC192POS-XFP || 68-2191-04 || Iguana\n|-\n|1 Port OC192 POS SPA (LR optics) || Unknown || Unknown || Chameleon\n|-\n|4-port T3/E3 Serial SPA || SPA-4XT3/E3 || 68-2170-02 || ?\n|-\n|2-port OC48/STM16 POS/RPR SPA || SPA-2XOC48POS/RPR || 68-2226-01 || ?\n|}\n[[Category:GSR Linecards]]','utf-8');
INSERT INTO `csco_text` VALUES (1547,'Cisco develops various routers, switches, SONET MUXs, Firewalls, VPN concentrators and several other pieces of equipment and software related to telecommunications. This site is focused on the higher end of routing equipment specifically. \n\n\nThe following routers are covered:\n\n\n* Cisco CRS-1 - Codename: Q and 1/2 Q (for half rack deployments)\n\nThis router received much press as it was nicknamed HFR (in the tradition of the GSR being named BFR) by the press and most Cisco employees. It\'s goal is to allow large carrier/service-providers the ability to expand to a multi-chassis deployment as well as deliver an OC-768 interface. It operates the Cisco IOS-XR modular software and can operate with multiple route processors and switching fabrics.\n\n\n* Cisco GSR\n\nThis router, introduced in the late 1990s was Ciscos solution to many issues operators were facing with the scalability of the 7500 platform. Originally designed as both a router and an ATM switch, it provides redundant route processors and switching fabric. Each individual line card uses a distributed fowarding table and falls within specific line card engine types depending on the speed provided to the fabric as well as feature set.\n\n\n* Cisco 6500/7600\n\nThis switch/router has been increasing popular in deployments in the last several years. The Cisco 6500 was primarily used as a Layer-2 only switch with some routing functionality provided via the MSFC routing daughter card. Cisco has \"re-invented\" this product by releasing the 7600, which is very similar to the 6500. This product can now be as capable as the GSR on many levels with the Supervisor 720 module. Cisco seems to push the 6500 for more enterprise deployments while the 7600 as a service provider/carrier device.\n\n\n* Cisco 7500\n\nAn old horse of the Cisco fleet, which was once at the core of almost all Internet backbones at some point in time. While its speeds are dwarfed by many routers and switches on the market today, they are certainly not rare to come by on the open market. This model provided decent Ethernet, Fast Ethernet, channelized DS3, DS3 and even optical interfaces to the customer base. Cisco has released several additions onto this platform to increase the life of the product such as the newer VIP and RSP boards. While it cannot push packets as much as modern routers, its current low price guarantees it will have a place in some sort of network for at least a few years more.\n\n\n\n----\n\nCisco organizational structure\n\n\nIt helps in understanding certain parts of the Cisco organization to determine who you are dealing with. \n\nSales\n\n* AM - Account manager - This is your local sales guy.  He may work with one specific account or with multiple accounts based on the sales organization he\'s in.  He is tied to two things, margin and quota.  He handles contractual issues, purchasing, and quotes.\n\n* SE - Systems Engineer - SEs at Cisco usually do not do quotes (it depends on the org).  SEs are there to provide a technical resource to the AM and the customer.  SEs are dedicated in the same way the AM is dedicated but reports to a different manager.  The SE does not ever report to the AM, he reports to the SEM.  SEs at Cisco run from either Associate SE (like a Cisco Academy grad) to SE5 (4/5 only recently got added).  \n\n* SEM - Systems Engineering Manager - The SEM oversees either a single or multiple accounts usually paired with a Regional Manager (RM).  The SEM isn\'t necessarily someone who has climbed the SE tree at Cisco, he may be hired from outside or have never gotten above SE2.  \n\n\n* CSE - Consulting Systems Engineer - A CSE is just like an SE except they work on strategic initiatives across multiple accounts.  There are not only multiple designations (CSE1, CSE2, CSE3) of SEs, but there are multiple \"levels\" of CSEs (some exist for the entire service provider org, some exist for cable SPs, some exist for people in New York, etc, and some even exist for multiple accounts).\n\n* CSA - A CSE assigned to a specific account who only does overall architecture/vision/strategy for that account.  Not every account has this.\n\n* DE - Development Engineer - These are individuals who are typically not permitted to speak with customers. They typically either work in an architecture, testing or development (code) role. \n\n* TAC - Technical Assistance Center - The group that handles cases opened by customers. They typically will attempt to reproduce your issue in their own lab environment, and if a bug is found, filed and communicate with the DE.\n\n* PSIRT - Ciscos internal security group that handles DDTS/bugs opened that impact the security of Cisco products. Any bugs involving PSIRT are typically locked to PSIRT employees only. \n\n* NCE/AS - Network Consulting Engineers/Advanced Services - A service that can be purchased to provide customers with dedicated resources at Cisco to assist in issue resolution, future code bug scrubs and various other issues with Cisco. While expensive, they are skilled and knowledgeable people.  NCEs exist as part of 4 programs \n\n* NSSTG/ITD - IOS Technologies Division - This section of Cisco focuses on the writing, compiling and testing of the Cisco IOS.  These folks are actually not the whole story since a lot of IOS-specific stuff happens in each business unit.  NSSTG usually handles \"core\" protocols (MPLS, OSPF, BGP, etc) but they don\'t handle obscure things like switching in most cases.\n\n* BU - Business Unit - One of the confusing things about Cisco - the different Business Units which produce (sometimes overlapping) products in different sectors \n\n* CCMSBU - Carrier Core Multi-Service Business Unit - This BU handles the GSR, 10k, CRS-1. They also do all code development for 12.0(31)S and beyond for the GSR as well as IOS-XR.\n\n* ERBU - Edge Routing Business Unit\n\n* DSBU - Desktop Switching Business Unit - BU handling 2950 ... 3750 switches etc','utf-8');
INSERT INTO `csco_text` VALUES (1562,'During most of 2006, the 6500 \"switch\" and 7600 \"router\" were in fact virtually identical hardware. Both used the same backplane technology, supervisor cards (sup720), linecards and IOS trains. Differences were largely cosmetic e.g. 6509 has horizontal linecards, 7609 vertical.\n\nMany customers treated them as basically identical.\n\nDuring the late part of 2006, various hints indicated that the two business units responsible for the platforms would be diverging them:\n\n* The 12.2(33)SRA IOS release notes for the 7600 has a \"works but not supported on 6500s\" clause\n* The 6708 10G card was not supported in SRA, only the SXF train (indicated it was not a \"7600\" card)\n* Various presentations indicated the RSP720 (faster CPU SUP720) would not run in a 6500\n\nEXTENSIVE discussions were had about this on the cisco-nsp mailing list; see for example:\n\n* http://puck.nether.net/pipermail/cisco-nsp/2006-December/036739.html\n* http://puck.nether.net/pipermail/cisco-nsp/2006-December/036745.html\n\nThis was made official early in 2007 with the release of the 12.2(33)SRB IOS release for the 7600:\n\nhttp://www.cisco.com/en/US/products/hw/routers/ps368/prod_bulletin0900aecd805df25d.html\n\nAt the precise moment the implications are hazy, and all customers are advised to speak to their account managers, but it *seems* that:\n\n{| class=\"wikitable\"\n!6500\n!7600\n|-\n|High density\n|Lower density\n|-\n|Enterprise datacentre, core, WAN edge\n|Service provider core/aggregation\n|-\n|Highest performance<br/>\"if it isn\'t supported in hardware, it\'s not supported\"\n|High-touch (lots of per-packet features).<br/> Linecards use CPUs and ASICs <br/>PPPoX termination, IPSec, VPLS\n|-\n|Think of it like a routing switch\n|Think of it like a hardware-accelarated 7200\n|}\n\n\n{|\n|+Modules and port types\n!module/feature\n!6500 options\n!7600 options\n|-\n|supervisors\n|SUP720-10G - 2x 10Gb ports and PFC-3C <br/> needed for VSS\n|RSP720 - increases CPU from 600MHz to 1.2GHz\n|-\n|10GbE\n|6704, 6708, 6716 <br/> 1:1, 2:1 and 4:1 contended\n|ES20 - CPU-assisted, provider-core-facing 10GbE.<br/>Supports VPLS, MAC accounting etc.<br/>6708 is supported as of SRC\n|-\n|gigabit - fabric\n|6748 SFP, TX\n|also supported on 7600\n|-\n|rowspan=\"2\"|load balancing\n|ACE\n|Supported on 7600 from 12.2(33)SRC or later\n|-\n|CSM\n|\'\'\'NOT SUPPORTED\'\'\'\n|}\n\n\nSoftware differences\n\n12.2 SXF\n* support both platforms (only sup720, no rsp720)\n* limited modularity, no ipv6 or mpls\n* no ISSU\n* safe harbor release\n\n12.2(33) common feature\n* config change archive, rollback, context diff\n* mux-uni support - vlans and .1q sub-ints on same lan card port\n* SSO/NSF support for MPLS, HSRP\n\n12.2(33) SXH and upwards\n* 6500 only\n* supports sup-720 10g\n* supports VSS - effectively stacking for 6500s\n* modular release supports all features\n* monolithic release also available\n\n12.2(33) SR\n* SRA briefly ran on both\n* SRB and upwards are 7600 only\n* rsp720\n* intercept\n* 6vPE (multi-vrf ipv6)\n* can do ISSU between compatible versions as of SRB1','utf-8');
INSERT INTO `csco_text` VALUES (1570,'\'\'\'Using Cisco\'s Integrated TDR\'\'\'\n\nThe Catalyst 2960, 2970, 3560/3560-E, and 3750/3750-E switches have an integrated Time Domain Reflector (TDR), which is used to test cables associated with a port. TDR is supported only on 10/100/1000 and some 10/100 (Catalyst 2960) copper Ethernet ports. It is not supported on 10 GigabitEthernet or SFP module ports.\n\nHelps with troubleshooting:\n\n    * Open wires\n    * Cut wires\n    * Broken wires\n    * Shorted wires\n\nWith the TDR functionallity you can find the length of individual wires.\n\n\nSwitch# test cable-diagnostics tdr interface gigabitethernet0/2\n\nTDR test started on interface Gi0/2\n\n\nA TDR test can take a few seconds to run on an interface. Use \"show cable-diagnostics tdr\" to read the TDR results.\n\n\nSwitch#show cable-diagnostics tdr interface gigabitEthernet 0/2\n\nTDR test last run on: Dec 10 09:05:10\n\nInterface Speed Local pair Cable length Remote channel Status\n\nGi0/1 0Mbps 1-2 102 +-2m Unknown Fault\n\n3-6 100 +-2m Unknown Fault\n\n4-5 102 +-2m Unknown Fault\n\n7-8 102 +-2m Unknown Fault\n\n\nThe previous command is set to be deprecated sometime in the future and will be replaced by:\n\n# show diagnostic result interface GigabitEthernet 0/1','utf-8');
INSERT INTO `csco_text` VALUES (1571,'This section covers Tips and Tricks for Cisco routers. General tips & tricks will be listed here as well as platform specific options.\n\n= Protocols =\n\n* [[HSRP]] - Host Standby Router Protocol\n\n\n= Diagnostics Tools = \n\n[[Cisco TDR (Time Domain Reflectometer)]] - Integrated cable tester\n\n= GSR Convergence Improvements =\n\n process-max-time 50\n\nThis will lower the maximum time allocated for a process to run to 50ms rather than the default of 200ms.\n\n ip routing protocol purge interface\n\nThis will allow an interface link state change to directly impact the RIB rather than waiting on routing protocol updates to the RIB to take place.\n\n ip cef table loadinfo force\n\nThis will allow common prefixes on a LC-FIB to be associated with a pointer that permits rapid modification when the LC-FIB needs to be updated. This can save several seconds in convergence events on a network. Use caution with this command on E4/E4+ linecards as this increases LC memory usage.\n\n<pre>\n service internal\n\n ip cef linecard ipc service-timer 50\n</pre>\n\nThis will lower the timer (200ms default) used for transmitting XDR (essentially CEF writes) messages to a linecard.\n\n= Hidden Commands =\n\nThere are many hidden commands. The hidden command \n<pre>show parser dump</pre>\nwill allow you to reveal them by dumping the parser data (the unrolled parse tree) , \n<pre>show parser dump exec</pre> and <pre>show parser dump config</pre>\nare the best way of doing this, along with <pre>show parser dump exec debug</pre> which will write a file to your disk. \n\n= How to recover stuck telnet/ssh sessions =\n\n[[TCB_Recovery|How to recover stuck telnet/ssh sessions]]','utf-8');
INSERT INTO `csco_text` VALUES (1572,'\'\'\'Supervisors for Catalyst 6500/7600\'\'\'\n\nThere have been many different supervisors used on the Catalyst 6000 system throughout its lifespan.\n\nHere is a short tabled guide to them\n\n{|border = 1\n!Card name || Card Type || Model\n|-\n|Supervisor 1A ||Cat 6k sup 1 Enhanced QoS || WS-X6K-SUP1A-2GE\n|-\n|Supervisor 2 ||Catalyst 6000 supervisor 2 || WS-X6K-S2U-MSFC2\n|-\n|Supervisor 720 3A ||Supervisor Engine 720 || WS-SUP720\n|-\n|Supervisor 720 3B ||Supervisor Engine 720 3B || WS-SUP720-3B\n|-\n|Supervisor 720 3BXL ||Supervisor Engine 720 3BXL || WS-SUP720-3BXL\n|-\n|Supervisor 32 ||Supervisor Engine 32 8xGE || WS-SUP32-GE-3B\n|-\n|Supervisor 32 ||Supervisor Engine 32 2x10GE || WS-SUP32-10GE-3B\n|-\n|Route Switch Processor 720 || Route Switch Processor 720 10GE || RSP720-3CXL-10GE\n|}\n\n\n[[Category: 6500 cards]] [[Category:Switch]]','utf-8');
INSERT INTO `csco_text` VALUES (1573,'There are several types of Multi Service Feature Cards for the 6500 series:\n\n\n{| border =1\n! Card || Model || Fabric connection\n|-\n|Cat6k MSFC 2 daughterboard || WS-F6K-MSFC2 || \n|-\n|Cat6k MSFC 2A daughterboard || WS-F6K-MSFC2A || \n|-\n|MSFC3 Daughterboard || WS-SUP720 || \n|-\n|MSFC4 Daughterboard || 7600-MSFC4 ||\n|}','utf-8');
INSERT INTO `csco_text` VALUES (1598,'Use the following config for 6VPE\n\n<pre>\nmls ipv6 vrf\n\nvrf definition TEST\n description Blah\n rd 192.168.0.0:1\n route-target export 192.168.0.0:1\n route-target import 192.168.0.0:1\n !\n address-family ipv4\n exit-address-family\n !\n address-family ipv6\n exit-address-family\n\n\nint VlanXX\n vrf forwarding TEST\n ip address 192.168.60.254 255.255.255.0\n ipv6 address 2001:db8:100::1/64\n ! DOES NOT WORK in a VRF on 12.2(33)SXI\n ipv6 dhcp relay destination 2001:db8:101::2\n ! Optional, if you want to use HSRP/HSRPv2\n standby version 2\n standby 0 ip 192.168.60.1\n standby 1 ipv6 autoconfig\n\n\nrouter bgp #asnum\n neighbor 192.168.1.2 remote-as #asnum\n !\n address-family vpnv6\n  neighbor 192.168.1.1 activate\n exit-address-family\n !\n address-family ipv6 vrf TEST\n  redistribute connected\n  redistribute static\n  no synchronization\n exit-address-family\n!\n</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1599,'On Nov 13th, the 12.2(33)SXI software was released for the 6500 platform.\n\nThis page aims to document what works and what doesn\'t\n\n== What works ==\n\n* MPLS\n** IPv4 vrfs - tested & working, interop with 6500s running 12.2(18)SXF10, JunOS 8.3\n*** unicast - works\n**** including SNMP arp table i.e. ipNetToMedia\n**** including netflow\n*** multicast (MVPN) works\n** IPv6 vrfs - works, tested against JunOS 8.3 [[ios_sxi/6vpe|6vPE config]]\n*** requires \"mls ipv6 vrf\" global config command\n*** unicast - works\n**** including SNMP neigh table i.e. cInetNetToMediaPhysAddress\n**** including Netflow from VRF interfaces (assuming Netflow v9 is used)\n*** NOTE: DHCPv6 relay does not work on VRF interfaces, TAC case opened\n** ldp works\n** l2vpn (pseudowire/xconnect) tested and works including interop with JunOS\n\n* IPv4 (non-VRF/MPLS)\n** All seems to work\n\n* IPv6 (non-VRF)\n** DHCPv6 relay works (but not in a VRF)\n** HSRPv6 works\n\n* BGP\n\n* OSPFv2\n** interop with 6500 running 12.2(18)SFX10\n\n* Management\n** SCP works - no crash bug as per SXH3/3a\n** SNMP works - can do snmp full walk, all expected MIBs present\n\n== What doesn\'t ==\n\n* DHCPv6 in a VRF (TAC case opened)\n\n== Other Issues ==\n\n* The mac aging timer appears to both:\n** have changed by default from 300 to 480\n** cannot be set lower than 480\n** message logged on the console says:\n<pre>\n% Vlan Aging time not changed since OOB is enabled and requires aging time to be atleast 3 times OOB interval - default: 480 seconds\n</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1600,'On Nov 13th, the 12.2(33)SXI software was released for the 6500 platform.\n\nThis page aims to document what works and what doesn\'t\n\n== What works ==\n\n* MPLS\n** IPv4 vrfs - tested & working, interop with 6500s running 12.2(18)SXF10, JunOS 8.3\n*** unicast - works\n**** including SNMP arp table i.e. ipNetToMedia\n**** including netflow\n*** multicast (MVPN) works\n** IPv6 vrfs - works, tested against JunOS 8.3 [[ios_sxi/6vpe|6vPE config]]\n*** requires \"mls ipv6 vrf\" global config command\n*** unicast - works\n**** including SNMP neigh table i.e. cInetNetToMediaPhysAddress\n**** including Netflow from VRF interfaces (assuming Netflow v9 is used)\n*** NOTE: DHCPv6 relay does not work on VRF interfaces, TAC case opened\n** ldp works\n** l2vpn (pseudowire/xconnect) tested and works including interop with JunOS\n\n* IPv4 (non-VRF/MPLS)\n** All seems to work\n\n* IPv6 (non-VRF)\n** DHCPv6 relay works (but not in a VRF)\n** HSRPv6 works\n* CLNS/ISIS\n** works including v4+v6\n* BGP\n** works including v4+v6\n\n* OSPFv2\n** interop with 6500 running 12.2(18)SFX10\n\n* Management\n** SCP works - no crash bug as per SXH3/3a\n** SNMP works - can do snmp full walk, all expected MIBs present\n\n== What doesn\'t ==\n\n* DHCPv6 in a VRF (TAC case opened)\n\n== Other Issues ==\n\n* The mac aging timer appears to both:\n** have changed by default from 300 to 480\n** cannot be set lower than 480\n** message logged on the console says:\n<pre>\n% Vlan Aging time not changed since OOB is enabled and requires aging time to be atleast 3 times OOB interval - default: 480 seconds\n</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1607,'This page describes the procedure to remotely delete, using SNMP, stuck telnet sessions on \na Cisco router. \n\n===When you should use this procedure===\n\nRouters are usually configured with a limited number of concurrent management sessions (via telnet or ssh)\nand they usually are configured to automatically timeout after some time.\n\nUnder particular conditions it may happen that the management sessions remain stuck and the router will\nnot clear them. These conditions have been observed to cause this problem:\n* Operator error: users annoyed by the timeout disable it and then they whine they can\'t login anymore.\n* Operator error: users annoyed by the local password for console access disable it and then they whine they can\'t login anymore.\n* Firewall failure: crashes of the firewall may leave the telnet/ssh sessions in a state that the router can\'t recover. This has been observed with both PIX and RH-Firewall-1. Reason is unknown, probably an IOS bug. Using this procedure is easier than opening a TAC case, since it\'s difficult to reproduce the condition.\n\n===How to identify the stuck sessions===\n\nThe following command will dump all the TCBs of the remote router:\n\n $ snmpwalk -v 2c -c \'\'your_readwrite_community\'\' \'\'router\'\' 1.3.6.1.2.1.6.13.1.1\n\nThe output will look somewhat like this:\n\n<pre>\nRFC1213-MIB::tcpConnState.172.16.27.11.23.172.16.27.1.1855 = INTEGER: established(5)\nRFC1213-MIB::tcpConnState.172.16.216.146.11018.172.16.216.145.179 = INTEGER: established(5)\nRFC1213-MIB::tcpConnState.172.16.216.154.20081.172.16.216.153.179 = INTEGER: established(5)\nRFC1213-MIB::tcpConnState.172.16.216.185.646.172.16.216.186.11028 = INTEGER: established(5)\n</pre>\n\nEach line of output will have the local IP address, followed by the local TCP port, then the remote IP address and the remote TCP port.\nOf course, you\'re interested in local ports 22 (ssh) and 23 (telnet). Resetting BGP sessions will not gain you access to your router.\nSo in this example, the first line is the interesting one. In a real case, there could be several pageful of output which you need to scan.\nPlease note that you\'re only interested in the part to the left of the \'=\'.\n\n===How to reset the stuck sessions===\n\nOnce you have done the previous command and identified the interesting line(s), you have to issue the following command:\n\n $ snmpset -v 2c -c \'\'your_readwrite_community\'\' \'\'router\'\' \'\'the_abovementioned_line\'\' i 12\n\nSo in this particular case, the command you\'d have to issue would be:\n\n $ snmpset -v 2c -c \'\'your_readwrite_community\'\' \'\'router\'\' RFC1213-MIB::tcpConnState.172.16.27.11.23.172.16.27.1.1855 i 12\n\nThe \'i 12\' at the end of the line is what tells the router to clear the session. The router will reply with:\n\n<pre>\nRFC1213-MIB::tcpConnState.172.16.27.11.23.172.16.27.1.1855 = INTEGER: deleteTCB(12)\n</pre>\n\nYou should now be able to log into the router. If not, it means you cleared the wrong session, and you need to repeat the procedure. \n\n===How to prevent this problem===\n\nEasy and simple:\n\n* Kill users modifying authentication and access configuration. \n* Kill the firewall management group if they do maintenances during working hours.\n* Don\'t have a long exec-timeout (or 0!) when you manage device through a firewall. The firewall may time out your TCP session, and not send RSTs or anything, resulting in stuck sessions. \n* Use \'service tcp-keepalives-in\' and \'service tcp-keepalives-out\'.  The device will detect when a session has become non-responsive and remove it.\n\nApply torture ad libitum.','utf-8');
INSERT INTO `csco_text` VALUES (1609,'Most likely you are also getting this:\n\n<pre>\n%PFREDUN-SP-4-INCOMPATIBLE_ISSU_MATRIX: Compatibility Matrix check failed. reason 100\n</pre>\n\nThis is preventing you moving to SSO.\n\nreason 100 refers to some configuration commands being mismatched between synchronised versions\nof the startup-config, use the command\n\n\'\'\'redundancy config-sync validate mismatched-commands\'\'\'\n\nto check which these are, fix them and then issue\n\n\'\'\'show issu config-sync mismatched-commands\'\'\'\n\nYou are now ready to reload the standby.','utf-8');
INSERT INTO `csco_text` VALUES (1619,'=Commands=\n\n<pre>\nshow platform tech-support unicast vrf <vrf-name> <ip> <netmask>\n</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1621,'=Command=\n<pre>\n show mls cef inconsistency now\n</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1622,'=What can ELAM do for me?=\n\nTrace traffic as it moves through ASIC rewrite operations (Superman/Tycho etc..)\n\n=What do I need for it?=\n\n<pre>\nservice internal\n</pre>\n\n=Help=\n\n<pre>\n65k#show platform capture elam help\n\nIf you\'ve reached this point, you\'re in trouble...\nWell, ELAM can\'t do miracles, but can help you solve issues...\n\nTo make ELAM working for you, here the basic steps you\'ve to follow:\n1 - select a valid ELAM ASIC\n    cmd:     show platform capture elam asic\n    example: ...asic superman slot 5\n             - select the Superman ASIC on slot 5\n2 - enter a valid trigger\n    cmd:     show platform capture elam trigger\n    example: ...trigger dbus ipv4 if ip_da=224.1.0.0[255.255.0.0]\n             - capture any IPv4 packet with DESTIP == 224.1.0.0/16\n             ...trigger rbus ip if ccc=mcast_l3_rw met3=0x0300[0xff00]\n             - capture any IP packet generating a ML3_RW result with\n               MET3 pointer equal to 3xx\n             ...trigger dbus help\n             - return an extensive list of dbus field you can use\n3 - start the capture\n    cmd:     show platform capture elam start\n4 - check the capture status\n    cmd:     show platform capture elam status\n5 - print the captured data\n    cmd:     show platform capture elam data\n\nsimple enough, isn\'t it ?\n\n</pre>\n\n=Example from c-nsp=\n\n<pre>\n\nR3#sh ip int br \nInterface IP-Address OK? Method Status Protocol \nGigabitEthernet2/10 192.168.10.1 YES manual up up \n\nR3#sh ver \nCisco IOS Software, c7600s3223_rp Software (c7600s3223_rp-ADVIPSERVICES-M), Version 12.2(33)SRC1, RELEASE SOFTWARE (fc1) \nTechnical Support: http://www.cisco.com/techsupport \nCopyright (c) 1986-2008 by Cisco Systems, Inc. \nCompiled Fri 23-May-08 01:37 by prod_rel_team \n\nROM: System Bootstrap, Version 12.2(17r)SX3, RELEASE SOFTWARE (fc1) \n\nR3 uptime is 1 week, 6 days, 5 hours, 55 minutes \nUptime for this control processor is 1 week, 6 days, 5 hours, 56 minutes \nSystem returned to ROM by power-on (SP by power-on) \nSystem image file is \"bootdisk:c7600s3223-advipservices-mz.122-33.SRC1\" \nLast reload type: Normal Reload \n\ncisco CISCO7606 (R7000) processor (revision 1.0) with 458752K/65536K bytes of memory. \nProcessor board ID FOX1221GAQF \nR7000 CPU at 300Mhz, Implementation 0x27, Rev 3.3, 256KB L2, 1024KB L3 Cache \nLast reset from power-on \n1 Virtual Ethernet interface \n33 Gigabit Ethernet interfaces \n2 Ten Gigabit Ethernet interfaces \n1915K bytes of non-volatile configuration memory. \n\n\nR3#sh ip arp \nProtocol Address Age (min) Hardware Addr Type Interface \nInternet 192.168.10.1 - 001b.0def.7240 ARPA GigabitEthernet2/10 \nInternet 192.168.10.2 175 001e.be8a.f880 ARPA GigabitEthernet2/10 \nInternet 192.168.10.9 11 001b.0def.7280 ARPA GigabitEthernet2/3 \nInternet 192.168.10.10 - 001b.0def.7240 ARPA GigabitEthernet2/3 \n\n\nR3#ping 192.168.10.2 \n\nType escape sequence to abort. \nSending 5, 100-byte ICMP Echos to 192.168.10.2, timeout is 2 seconds: \n!!!!! \nSuccess rate is 100 percent (5/5), round-trip min/avg/max = 1/1/4 ms \n\nR3#config t \nEnter configuration commands, one per line. End with CNTL/Z. \nR3(config)#serv int \nR3(config)#end \n\nR3#sh mod \n*Sep 25 18:10:37.377: %SYS-5-CONFIG_I: Configured from console by console \n\nR3#sh mod | incl Act \n5 3 Supervisor Engine 32 10GE (Active) WS-SUP32-10GE-3B SAL1051BEKF \n\nR3#show plat capture elam asic super slot 5 \n\nR3#$show plat elam trigger dbus ipv4 if IP_SA=192.168.10.1 IP_DA=192.168.10.2 \n\nR3#show plat capture elam status \nactive ELAM info: \nSlot Cpu Asic Inst Ver PB Elam \n---- --- -------- ---- --- -- ---- \n5 0 SUPERMAN 0 1.3 Y \nDBUS trigger: FORMAT=IP L3_PROTOCOL=IPV4 IP_SA=192.168.10.1 IP_DA=192.168.10.2 \n\nR3#show plat cap elam start \n\nR3#show plat capture elam status \nactive ELAM info: \nSlot Cpu Asic Inst Ver PB Elam \n---- --- -------- ---- --- -- ---- \n5 0 SUPERMAN 0 1.3 Y \nDBUS trigger: FORMAT=IP L3_PROTOCOL=IPV4 IP_SA=192.168.10.1 IP_DA=192.168.10.2 \nelam capture in progress \n\n\nR3#!send a ping \nR3#ping 192.168.10.2 rep 1 \n\nType escape sequence to abort. \nSending 1, 100-byte ICMP Echos to 192.168.10.2, timeout is 2 seconds: \n! \nSuccess rate is 100 percent (1/1), round-trip min/avg/max = 1/1/1 ms \n\n\nR3#show plat capture elam status \nactive ELAM info: \nSlot Cpu Asic Inst Ver PB Elam \n---- --- -------- ---- --- -- ---- \n5 0 SUPERMAN 0 1.3 Y \nDBUS trigger: FORMAT=IP L3_PROTOCOL=IPV4 IP_SA=192.168.10.1 IP_DA=192.168.10.2 \nelam capture completed \n\nR3#!elam completed \n\nR3#show plat cap elam data \nDBUS data: \nSEQ_NUM [5] = 0x3 \nQOS [3] = 0 \nQOS_TYPE [1] = 0 \nTYPE [4] = 0 [ETHERNET] \nSTATUS_BPDU [1] = 0 \nIPO [1] = 1 \nNO_ESTBLS [1] = 0 \nRBH [3] = b000 \nCR [1] = 0 \nTRUSTED [1] = 0 \nNOTIFY_IL [1] = 0 \nNOTIFY_NL [1] = 0 \nDISABLE_NL [1] = 0 \nDISABLE_IL [1] = 0 \nDONT_FWD [1] = 0 \nINDEX_DIRECT [1] = 0 \nDONT_LEARN [1] = 0 \nCOND_LEARN [1] = 0 \nBUNDLE_BYPASS [1] = 0 \nQOS_TIC [1] = 0 \nINBAND [1] = 0 \nIGNORE_QOSO [1] = 0 \nIGNORE_QOSI [1] = 1 \nIGNORE_ACLO [1] = 0 \nIGNORE_ACLI [1] = 1 \nPORT_QOS [1] = 0 \nCACHE_CNTRL [2] = 0 [NORMAL] \nVLAN [12] = 1030 \nSRC_FLOOD [1] = 0 \nSRC_INDEX [19] = 0x380 \nLEN [16] = 118 \nFORMAT [2] = 0 [IP] \nMPLS_EXP [3] = 0x0 \nREC [1] = 0 \nNO_STATS [1] = 0 \nVPN_INDEX [10] = 0x0 \nPACKET_TYPE [3] = 0 [ETHERNET] \nL3_PROTOCOL [4] = 0 [IPV4] \nL3_PT [8] = 1 [ICMP] \nMPLS_TTL [8] = 0 \nSRC_XTAG [4] = 0x0 \nDEST_XTAG [4] = 0x0 \nFF [1] = 0 \nMN [1] = 0 \nRF [1] = 0 \nSC [1] = 0 \nCARD_TYPE [4] = 0x0 \nDMAC = 001e.be8a.f880 \nSMAC = 001b.0def.7240 \nIPVER [1] = 0 [IPV4] \nIP_DF [1] = 0 \nIP_MF [1] = 0 \nIP_HDR_LEN [4] = 5 \nIP_TOS [8] = 0x0 \nIP_LEN [16] = 100 \nIP_HDR_VALID [1] = 1 \nIP_CHKSUM_VALID [1] = 1 \nIP_L4HDR_VALID [1] = 1 \nIP_OFFSET [13] = 0 \nIP_TTL [8] = 255 \nIP_CHKSUM [16] = 0x2640 \nIP_SA = 192.168.10.1 \nIP_DA = 192.168.10.2 \nICMP_TYPE [8] = 0x8 \nICMP_CODE [8] = 0x0 \nICMP_DATA [104] \n0000: 8D CD 00 01 00 00 00 00 00 00 3B AB CD \"..........;..\" \nCRC [16] = 0x0 \n\nRBUS data: \nSEQ_NUM [5] = 0x3 \nCCC [3] = b100 [L3_RW] \nCAP1 [1] = 0 \nCAP2 [1] = 0 \nQOS [3] = 0 \nEGRESS [1] = 0 \nDT [1] = 0 [IP] \nTL [1] = 0 [B32] \nFLOOD [1] = 1 \nDEST_INDEX [19] = 0x406 \nVLAN [12] = 1030 \nRBH [3] = b011 \nRDT [1] = 0 \nGENERIC [1] = 0 \nEXTRA_CICLE [1] = 0 \nFABRIC_PRIO [1] = 0 \nL2 [1] = 1 \nFCS1 [8] = 0x1 \nIP_TOS_VALID [1] = 1 \nIP_TOS_OFS [7] = 15 \nIP_TOS [8] = 0x0 \nIP_TTL_VALID [1] = 0 \nIP_TTL_OFS [7] = 22 \nIP_TTL [8] = 255 \nIP_CSUM_VALID [1] = 1 \nIP_CSUM_OFS [7] = 24 \nIP_CSUM [16] = 0x2640 \nDELTA_LEN [8] = 0 \nREWRITE_INFO \ni0 - no rewrite. \nFCS2 [8] = 0x5B \n\nR3#sh vlan internal us | incl 1030 \n1030 GigabitEthernet2/10 \n\nR3#sh ip ro 192.168.10.2 \nRouting entry for 192.168.10.0/30 \nKnown via \"connected\", distance 0, metric 0 (connected, via interface) \nRouting Descriptor Blocks: \n* directly connected, via GigabitEthernet2/10 \nRoute metric is 0, traffic share count is 1 \n\nR3#!that was the frame on egress from the box \n\nR3#sh ver | incl IOS \nCisco IOS Software, c7600s3223_rp Software (c7600s3223_rp-ADVIPSERVICES-M), Version 12.2(33)SRC1, RELEASE SOFTWARE (fc1) \n\nR3#\n</pre>\n\n=Match by data=\nMost elam capture options provide a way to mask out some information.  In general, OPT=data[mask] is the form you want to use.  One very useful form of this is to match a packet based on the data the packet contains.  For example, there\'s no pre-cooked way to capture ARP packets (as of SXF15, the newest I\'ve used).  Here\'s a way to match, courtesy of TAC, to catch ARP packets from 10.0.0.1 (note that 10.0.0.1 in hex is 0xa0000001):\n\n<pre>router#show platform capture elam trigger dbus others if data=0 0 0 0x08060000 0 0 0 0xA0000001 0 0 0 [ 0 0 0 0xffff0000 0 0 0 0xffffffff 0 0 0 ]</pre>','utf-8');
INSERT INTO `csco_text` VALUES (1624,'Enhanced Address Recognition Logic','utf-8');
INSERT INTO `csco_text` VALUES (1626,'A short listing of some ASICs used on Cisco platforms.\n\n{| border=1\n! ASIC || Name || Description || Applications\n|-\n|COIL || || 12 port Gigabit interface || Typically deployed with a COIL behind each interface of PINNACLE\n|-\n|SUPERMAN ||[[EARL]] L2 Engine|| ||\n|-\n|TYCHO ||[[EARL]] L3 Engine|| ||\n|-\n|DHANUSH || || ||\n|-\n|HYPERION || || ||\n|-\n|JANUS || || ||\n|-\n|ASTRO ||8 port 10/100 controller stub ASIC || ||\n|-\n|NiCER ||4 port 1000 controller stub ASIC || ||\n|-\n|LEMANS ||8 port 10/100/1000 controller stub ASIC|| ||\n|-\n|METRO_ARGUS || Metropolis Argos || ||\n|-\n|PINNACLE || Pinnacle || 4 port Gigabit interface || Common on supervisors bus-based service modules\n|-\n|MEDUSA || || ||\n|-\n|REVATI || || || ? 8 port gigabit (6 on WS6548-GE-TX) ?\n|-\n|ROHINI || || ||\n|-\n|R2D2 || || ||\n|-\n|SSA || Super Santa Anna || ||\n|-\n|SSO || || ||\n|-\n|VISHAKHA || || 8 port Gigabit || WS-X6148A-GE-TX uses 6, all connected to DHANUSH\n|}\n\n==References==\n[http://www.cisco.com/en/US/products/hw/switches/ps663/products_tech_note09186a00801c9221.shtml Understanding and Troubleshooting Astro/Lemans/NiceR Timeouts on Catalyst 4000/4500 Series Switches]','utf-8');
INSERT INTO `csco_text` VALUES (1629,'[[Category:6500 cards]] [[Category:Switch]] [[Category:Router]]\n\nCisco 6500 Series Switch / 7600 Series Router\n\n== Platform split ==\n\nThe 6500 and 7600 platforms are diverging as of 2007.\n\nSee the [[6500 7600 split]] page for more info\n\n== Software ==\n\nThe 6500/6000 series can run in multiple software configurations. You can run CatOS, Hybrid, or Native. The basic SUP/MSFC configurations usable for each setup can be found at the top of http://tools.cisco.com/ITDIT/CFN/jsp/platformhelp.jsp, or there\'s a backup of the relevant text on the [[6500 Software]] page.\n\n== Linecards ==\n\nThere are many different variations in control cards and linecard for the 6500 series.\n\n[[Supervisor]]\n\n[[MSFC]]\n\n[[10 Gigabit Ethernet]]\n\n[[Gigabit Ethernet]]\n\n[[Fast Ethernet]]\n\n[[OSM]]\n\n[[FlexWAN]]\n\n[[SIP]]\n\n[[ASIC]]\n\n== Useful info ==\n\n[[Suggested rate-limit and storm settings]]\n\n[[sup720 load balancing]]\n\n[[6500 SPAN the RP]]\n\n[[Using capture buffer to find interrupt switched traffic]]\n\n[[Using capture buffer with ELAM]]\n\n[[Troubleshooting VRF related internal structures]]\n\n[[ERSPAN to PCAP script]]\n\n[[Dealing with ISSU-SP-3-PEER_IMAGE_INCOMPATIBLE when the images are compatible]]\n\n[[Running internal consistency check on demand]]\n\n[[SRC4 may reject some transceivers]]\n\n== Useful Documentation Links ==\n\nhttp://www.cisco.com/univercd/cc/td/doc/product/lan/cat6000/122sx/swcg/qos.htm - configuring QoS on the PFC; shows how packets are queued and processed on the PFC2/PFC3 with relation to QoS \n\nhttp://www.cisco.com/univercd/cc/td/doc/product/core/cis7600/76sipspa/sipspasw/index.htm - Cisco 7600 Series Router SIP, SSC, and SPA Software Configuration Guide\n\nhttp://www.cisco.com/univercd/cc/td/doc/product/core/cis7600/hardware/7600_hw.htm - Supported Hardware for Cisco 7600 Series Routers with IOS 12.2SR\n\nhttp://www.cisco.com/en/US/prod/collateral/iosswrel/ps8802/ps6970/ps1838/prod_bulletin0900aecd805ddce3.html - Cisco IOS Software Release 12.2SR New Features and Hardware Support','utf-8');
INSERT INTO `csco_text` VALUES (1630,'Unsupported transceivers enabled with\n\n<pre>\nservice unsupported-transceiver\n</pre>\n\nMay cease to function under SRC4. \n\nNo more information is available at present time.','utf-8');
INSERT INTO `csco_text` VALUES (1636,'There are several varieties of Gigabit Ethernet card available for the 6500 series:\n\n{| border =1\n! Card || Model || Fabric connection || Installation options || [[ASIC]] count\n|-\n|48 port 10/100/1000mb EtherModule || WS-X6148-GE-TX || Classic Bus || || PINNACLE x2, LEMANS x6, REVATI x6\n|-\n|48 port 10/100/1000mb EtherModule || WS-X6148A-GE-TX || Classic Bus || || VISHAKHA x6, DHANUSH x1\n|-\n|16 port 1000mb GBIC ethernet || WS-X6416-GBIC || Classic Bus || ||PINNACLE x4\n|-\n|8 port 1000mb GBIC Enhanced QoS || WS-X6408A-GBIC || Classic Bus || || PINNACLE x2\n|-\n|8 port 1000mb GBIC ethernet || WS-X6408-GBIC || Classic Bus || ||\n|-\n|16 port 1000mb GBIC || WS-X6516-GBIC || CEF256 x1 || || MEDUSA x1, TITAN x1, PINNACLE x4\n|-\n|16 port 1000mb GBIC Enhanced QoS || WS-X6516A-GBIC || CEF256 x1 || || HYPERION x1, PINNACLE x4\n|-\n|48 port 10/100/1000mb || WS-X6548-GE-TX || CEF256 x1 || || PINNACLE x2, LEMANS x6, REVATI x6, HYPERION x1\n|-\n|CEF720 48 port 10/100/1000mb || WS-X6748-GE-TX || CEF720 x2 || CFC or DFC || JANUS x2, SSA x2, ROHINI x4\n|-\n|CEF720 48 port 1000mb SFP || WS-X6748-SFP || CEF720 x2 || CFC or DFC || JANUS x2, SSA x2, ROHINI x2\n|-\n|CEF720 24 port 1000mb SFP || WS-X6724-SFP || CEF720 x1 || CFC or DFC || JANUS x1, SSA x1, ROHINI x1\n|-\n|Pure SFM-mode 16 port 1000mb GBIC || WS-X6816-GBIC || CEF256 x2 || DFC only || PINNACLE x4, MEDUSA x2, TITAN x2\n|}\n\n[[Category:6500 cards]]','utf-8');
INSERT INTO `csco_text` VALUES (1637,'There are many types of Fast Ethernet cards for the 6500 series:\n\n\n{| border =1\n! Card || Model || Fabric connection || Installation options || [[ASIC]] count\n|-\n|48 port 10/100 mb RJ-21 ethernet || WS-X6148-RJ-21 || Classic Bus || || PINNACLE x1, COIL x4\n|-\n|48 port 10/100 mb RJ-45 ethernet || WS-X6248-RJ-45 || Classic Bus || || PINNACLE x1, COIL x4\n|-\n|48 port 10/100 mb RJ-45 ethernet || WS-X6348-RJ-45 || Classic Bus || || PINNACLE x1, COIL x4\n|-\n|SFM-capable 48-port 10/100 Mbps RJ45 || WS-X6548-RJ-45 || CEF256, Classic Bus || || MEDUSA x1, TITAN x1, PENTAMAK x1, MII_PHY x6, QCHIP x1, RCHIP x1, SCULPTOR x1\n|}','utf-8');
INSERT INTO `csco_text` VALUES (1644,'6500s (with appropriate software revisions) can SPAN (port mirror) the interface facing the CPU, allowing you to view all the CPU-punted traffic\n\n== Monitoring under SXI ==\n\nIt\'s really easy under SXI\n\n1) Create the monitor session of choice - the following example uses ERSPAN\n monitor session 1 type erspan-source\n  description foobar\n  source cpu [rp|sp]\n  destination\n   erspan-id ANUMBER\n   ip address the.receiver.ip.addr\n   ip ttl 64\n   origin ip address the.loopback.ip.addr\n   ! optional\n   vrf WHATEVER\n  no shut\n\n2) Use something to receive the traffic - see below for ERSPAN\n\n== Monitoring under SXF ==\n\nAt the time of writing (march 2007, IOS 12.2SXF7) you need a dummy span session and to talk to the SP IOS. Proceed as follows:\n\n1) Determine which slot your active (or only, if you have just one) supervisor is in - \"show mod\" and \"show red\" should get this\n\n2) Create the \"dummy\" SPAN session. The following example is an ERSPAN (SPAN over GRE), but ordinary SPAN and RSPAN can be used. GiX/Y is any port which is down/not in use:\n monitor session 1 type erspan-source\n  description foobar\n  source interface GiX/Y\n  destination\n   erspan-id ANUMBER\n   ip address the.receiver.ip.addr\n   ip ttl 64\n   origin ip address the.loopback.ip.addr\n   ! optional\n   vrf WHATEVER\n\n3) attach to the active sup SP IOS - X is the slot you determined in step 1\n attach X\n\n4) add the RP port to the session you just created\n test monitor add 1 rp-inband both\n\n5) And/or add the SP port (layer 2 traffic)\n test monitor add 1 sp-inband both\n\n5) exit back to the main IOS\n exit\n\n6) enable the span session\n conf t\n mon sess 1\n no shut\n\n7) you should see traffic flowing\n\n== ERSPAN to a non-cisco ==\n\nIf you\'re using ERSPAN, you can use [http://staff.washington.edu/corey/gulp/ gulp] to receive and view the traffic on something that isn\'t another Cisco','utf-8');
INSERT INTO `csco_text` VALUES (1645,'=Control Plane Policing on the SUP720=\n\nControl Plane Policing (CoPP) is a mechanism for managing traffic which is directed towards the management plane of a Cisco router.  The SUP720 supports hardware-assisted CoPP.  This document explains how CoPP operates on a SUP720, what its limitations are, and how it interoperates with mls rate-limiting.  A sample SUP720 CoPP configuration is provided with explanations.\n\nThis document was written as a summary of an extensive discussion of SUP720 CoPP on the [https://puck.nether.net/mailman/listinfo/cisco-nsp Cisco NSP] mailing list.\n\n==SUP 720 Architecture==\n\nBefore reading this document, please read the SUP720 sections from the following URLs:\n\n* [http://www.cisco.com/en/US/prod/collateral/switches/ps5718/ps708/product_data_sheet09186a0080159856_ps2797_Products_Data_Sheet.html Cisco Catalyst 6500/Cisco 7600 Series Supervisor Engine 720 Data Sheet]\n* [http://www.cisco.com/en/US/prod/collateral/switches/ps5718/ps708/prod_white_paper0900aecd80673385.html Cisco Catalyst 6500 Architecture White Paper]\n* [http://www.cisco.com/en/US/products/hw/switches/ps708/products_tech_note09186a00804916e0.shtml Catalyst 6500/6000 Switch High CPU Utilization]\n* [http://www.cisco.com/en/US/products/hw/switches/ps708/products_qanda_item09186a00809a7673.shtml Catalyst 6500 Series Switches PFC, DFC, and CFC FAQ]\n\n==Definitions==\n\n===RP - The Route Processor===\n\nThe RP is the primary CPU on the SUP720 card.  It handles certain types of traffic, including host traffic to / from the box (i.e. logging in, snmp, etc).  Under certain circumstances, traffic that would normally be forwarded in hardware is sent to the RP.\n\n===Glean Traffic===\n\nGlean traffic is IP traffic for which there are no ARP entries in the ARP cache, and which need ARP resolution before they can be forwarded. Glean traffic is processed by the RP.\n\n===Punt Traffic===\n\nPunt traffic is traffic which cannot be forwarded in hardware and needs to be sent (i.e. punted) to the RP CPU to be forwarded.  In some ways, this is equivalent to what used to be called \"process switched traffic\".','utf-8');
INSERT INTO `csco_text` VALUES (1647,'= QoS for DSL links =\n\nSome notes for deploying QoS (upstream only, for obvious reasons) on the little various Cisco router devices for homes and offices.\n\n== Huh? ==\n\nWhy is it here? It seems to be a hot topic and its not really ever done right.\n\n== Stuff this config does ==\n\n* Not all Cisco devices have the same NAT PDLMs for various protocols built in and bug-free; tk has added a couple of custom ones for VoIP applications to work.\n* Various infrastructure (DNS, TCP session connection) gets higher priority so flow-based fair queue gets the chance to actually -get- connections to shape.\n* ADSL lines are generally asymmetric (the \'A\', right?) - so you can tell your DSL interface about the available ATM bandwidth for upstream but not for downstream -but- it doesn\'t matter as you can\'t really apply QoS on stuff coming in anyway (unless you feel  like rate-shaping downloads - but then you do classification on ingress and shaping on the egress ports; that exercise is left to the reader.)\n\n== The configuration snippets ==\n\nLoad in PDLMs:\n\n ip nbar pdlm flash:/pdlm/rtp-124.pdlm\n  ip nbar pdlm flash:/pdlm/skinny.pdlm\n\nThe class maps:\n\n class-map match-any interactive\n  match protocol ssh\n  match protocol telnet\n class-map match-any voice\n  match ip dscp ef\n  match ip dscp 6\n  match protocol rtp\n class-map match-any www\n  match access-group name http\n  match access-group name https\n class-map match-any signaling\n  match ip dscp cs3\n  match ip dscp af31\n  match access-group name tcp-syn\n  match protocol dns\n  match access-group name tcp-initial\n  match protocol skinny\n !\n\nThe ACLs used by the above class maps:\n\n ip access-list extended http\n  permit tcp any any eq www\n  permit tcp any eq www any\n ip access-list extended https\n  permit tcp any any eq 443\n  permit tcp any eq 443 any\n ip access-list extended tcp-initial\n  permit tcp any any match-all +ack +syn\n ip access-list extended tcp-syn\n  permit tcp any any syn\n !\n\nThe policy-map:\n\n policy-map dsl-upstream-qos\n  class voice\n  priority percent 50\n  class signaling\n  priority percent 5\n  class interactive\n  priority percent 20\n  class www\n  bandwidth remaining percent 50\n  class class-default\n  fair-queue 32\n  queue-limit 32\n !\n\nThe ATM interface and sub-interface configuration:\n\n interface ATM0\n  no ip address\n  no ip redirects\n  no ip unreachables\n  no ip proxy-arp\n  load-interval 30\n  no atm ilmi-keepalive\n  dsl operating-mode auto\n !\n interface ATM0.3 point-to-point\n  no snmp trap link-status\n  pvc 8/35\n   vbr-rt 384 384 1\n   tx-ring-limit 2\n   service-policy output dsl-upstream-qos\n   pppoe-client dial-pool-number 1\n  !\n !\n\nThe VLAN interface (its an 877; so the ethernet ports are an internal switch..) - note the NBAR:\n\n interface Vlan1\n  ip address 10.10.10.1 255.255.255.0\n  no ip redirects\n  no ip proxy-arp\n  ip nbar protocol-discovery\n  ip nat inside\n  ip virtual-reassembly\n  ip flow ingress\n  ip tcp adjust-mss 1452\n  load-interval 30\n  ipv6 address 2001:4988:DEAD:BEEF:CAFE:1:0:1/96\n  ipv6 enable\n !\n\nThe dialer interface (note the NBAR):\n\n interface Dialer0\n  ip address negotiated\n  no ip redirects\n  no ip proxy-arp\n  ip mtu 1452\n  ip nbar protocol-discovery\n  ip nat outside\n  ip virtual-reassembly\n  ip flow ingress\n  encapsulation ppp\n  ip tcp adjust-mss 1300\n  load-interval 30\n  dialer pool 1\n  dialer idle-timeout 0\n  dialer string nada\n  dialer persistent delay 30\n  dialer-group 1\n  no cdp enable\n  ppp authentication chap callin\n  ppp chap hostname sung\n  ppp chap password 0 not4u\n !\n\nBecause NATting SIP with the PDLM can be frought with pain:\n\n no ip nat service sip udp port 5060\n\n== Credits ==\n\nConfig snippets by Tony Kapela. This document prepared by Adrian Chadd. This was built for a Cisco 877. Adrian tested it on a Cisco 827 by munging the NBAR rules into protocol/port ACLs as the 827 isn\'t grunty enough for NBAR.\n\nTony needs to remember how he verified this worked fine (I believe it involved plenty of iperf streams and connection attempts whilst testing VoIP.) I remember he found crack in the ATM interface tx-ring-queue setting.\n\nBe prepared to test it set to 2.  A value of 1 causes link flapping due to queue starvation causing PPP keepalive frame drops, as well as higher CPU usage.  Also be aware that PPP keepalive frames (& all other non-IP traffic such as CDP, IS-IS, etc) are always matched by the \"class-default\" class, so if that queue is starved by priority queues long enough to discard them the link will drop.\n\nThis stuff only works \"properly\" if your ISP applies some sane QoS on the downstream from them to the client - not all ISPs do. This configuration does avoid early performance degredation due to piss-poor DSL upstream bandwidth - eg 8mbit downstream / 384kbit upstream. YMMV.','utf-8');
INSERT INTO `csco_text` VALUES (1648,'','utf-8');
INSERT INTO `csco_text` VALUES (173342,'\'\'\'2.5 Gbps per slot Chassis:\'\'\'\n\n\n* 12006\n\nSlots: 6\n\nRack Size: 1/4\n\nMarketing Throughput: 30Gbps\n\nNote: Newer chassis revision can be upgraded to 12406 with a software key.\n\n* 12008\n\nSlots: 8\n\nRack Size: 1/3\n\nMarketing Throughput: 40Gbps\n\nNote: Fabric can not be upgraded and does not support the (wider) SIP cards\n\n* 12010\n\nSlots: 10\n\nRack Size: 1/2\n\nMarketing Throughput: 50Gbps\n\nNote: Newer chassis revision can be upgraded to 12410 with a software key.\n\n* 12012\n\nSlots: 12\n\nRack Size: 2/3\n\nMarketing Throughput: 60Gbps\n\nNote: Fabric can not be upgraded and does not support the (wider) SIP cards\n\n* 12016\n\nSlots: 16\n\nRack Size: Full\n\nMarketing Throughput: 80Gbps\n\nNote: Can be field upgraded to 12416 or 12816 by changing the fabric.\n\n\n\'\'\'10Gbps per slot Chassis:\'\'\'\n\n\n* 12404\n\nSlots: 4\n\nRack Size: 1/8\n\nMarketing Throughput: 80Gbps\n\n* 12406\n\nSlots: 6\n\nRack Size: 1/4\n\nMarketing Throughput: 120Gbps\n\n* 12410\n\nSlots: 10\n\nRack Size: 1/2\n\nMarketing Throughput: 200Gbps\n\nNote: Can be upgraded to 12810 with field fabric upgrade.\n\n* 12416\n\nSlots: 16\n\nRack Size: Full\n\nMarketing Throughput: 320Gbps\n\nNote: Can be upgraded to 12816 with field fabric upgrade.\n\n\n\'\'\'20Gbps per slot Chassis\'\'\'\n\n\n* 12810\n\nSlots: 10\n\nRack Size: 1/2\n\nMarketing Throughput: 400Gbps\n\n* 12816\n\nSlots: 16\n\nRack Size: Full\n\nMarketing Throughput: 640Gbps','utf-8');
INSERT INTO `csco_text` VALUES (173366,'[[Category:Router]]\n\nCisco ASR9000\n\n==Models==\n* ASR9001 - Code Name: Iron Man\n* ASR9006 \n* ASR9010 - Code Name: Viking\n* ASR9922 - Code Name: Megatron\n\n==Linecards==\n{| border = 1\n!Card || Type/PID ||Long name || Codename \n|-\n|8 port 10GE oversubscribed || A9K-8T/4-B || 8-Port, 10GE 2:1 Oversubscribed Line Card, Requires XFPs \n|-\n|8 port 10GE linerate || A9K-8T-L || 8-Port 10GE Low Queue Line Card, Requires XFPs\n|}\n\n==Useful Commands==\n\n* Start a shell : \'\'\'run\'\'\'\n* Global CEF Table resource usage : \'\'\'show cef resource detail\'\'\'\n* NP CEF Table resource usage: \'\'\'show cef platform resource\'\'\'\n* NP Hardware IPv4 Entries : \'\'\'show controller np struct 23 summary\'\'\'\n* NP Hardware IPv6 Entries : \'\'\'show controller np struct 24 summary\'\'\'','utf-8');
INSERT INTO `csco_text` VALUES (317001,'[[Image:cisco.jpg|thumb|right|Cisco 12000 Series Gigabit Switch Routers]]\nWelcome to Cisco Clue.\n\n----\n\nHave Cisco routers? Have clue or need a clue? If so, this may be the site for you.\n\nCisco Clue seeks to provide a compendium of useful knowledge, from the field, from other operators about Ciscos higher end router equipment. <span class=\"plainlinks\"> This site is neither affiliated with nor endorsed by Cisco Systems. All users are encouraged to contribute by making edits to pages.\n\nThis site currently focuses on the higher end of Cisco routers:\n\n* [[Cisco CRS-1]]\n* [[Cisco GSR]]\n* [[Cisco 6500/7600]]\n* [[Cisco 7500]]\n* [[Cisco 7200]]\n* [[Cisco ASR9000]]\n\nBrowse by subject:\n\n* [[Basics]] covers architecture and design of Cisco routers.\n* [[Catalyst Switches]] cover the switching products\n* [[Tips and Tricks]] covers common pitfalls and interesting/exotic tricks.\n* [[Deployment Applications]] cover real world deployment senarios\n* [[Product Enhancement Requests]] covers a place to discuss desired features and enhancements.\n* [[Bugs]] would be the place to discuss something we all seem to frequently run into.\n* [[Stories]] contains interesting stories about Cisco and their equipment.\n* [[Certification]] discusses the many Cisco certifications that exist.\n* [[Other resources]] contains links to other useful Cisco router resources.','utf-8');
INSERT INTO `csco_text` VALUES (173366,'[[Category:Router]]\n\nCisco ASR9000\n\n==Models==\n* ASR9001 - Code Name: Iron Man\n* ASR9006 \n* ASR9010 - Code Name: Viking\n* ASR9922 - Code Name: Megatron\n\n==Linecards==\n{| border = 1\n!Card || Type/PID ||Long name || Codename \n|-\n|8 port 10GE oversubscribed || A9K-8T/4-B || 8-Port, 10GE 2:1 Oversubscribed Line Card, Requires XFPs \n|-\n|8 port 10GE linerate || A9K-8T-L || 8-Port 10GE Low Queue Line Card, Requires XFPs\n|}\n\n==Useful Commands==\n\n* Start a shell : \'\'\'run\'\'\'\n* Global CEF Table resource usage : \'\'\'show cef resource detail\'\'\'\n* NP CEF Table resource usage: \'\'\'show cef platform resource\'\'\'\n* NP Hardware IPv4 Entries : \'\'\'show controller np struct 23 summary\'\'\'\n* NP Hardware IPv6 Entries : \'\'\'show controller np struct 24 summary\'\'\'','utf-8');
INSERT INTO `csco_text` VALUES (317001,'[[Image:cisco.jpg|thumb|right|Cisco 12000 Series Gigabit Switch Routers]]\nWelcome to Cisco Clue.\n\n----\n\nHave Cisco routers? Have clue or need a clue? If so, this may be the site for you.\n\nCisco Clue seeks to provide a compendium of useful knowledge, from the field, from other operators about Ciscos higher end router equipment. <span class=\"plainlinks\"> This site is neither affiliated with nor endorsed by Cisco Systems. All users are encouraged to contribute by making edits to pages.\n\nThis site currently focuses on the higher end of Cisco routers:\n\n* [[Cisco CRS-1]]\n* [[Cisco GSR]]\n* [[Cisco 6500/7600]]\n* [[Cisco 7500]]\n* [[Cisco 7200]]\n* [[Cisco ASR9000]]\n\nBrowse by subject:\n\n* [[Basics]] covers architecture and design of Cisco routers.\n* [[Catalyst Switches]] cover the switching products\n* [[Tips and Tricks]] covers common pitfalls and interesting/exotic tricks.\n* [[Deployment Applications]] cover real world deployment senarios\n* [[Product Enhancement Requests]] covers a place to discuss desired features and enhancements.\n* [[Bugs]] would be the place to discuss something we all seem to frequently run into.\n* [[Stories]] contains interesting stories about Cisco and their equipment.\n* [[Certification]] discusses the many Cisco certifications that exist.\n* [[Other resources]] contains links to other useful Cisco router resources.','utf-8');
