<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.6/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.6/ http://www.mediawiki.org/xml/export-0.6.xsd" version="0.6" xml:lang="en">
  <siteinfo>
    <sitename>Juniper Clue</sitename>
    <base>http://juniper.cluepon.net/index.php/Main_Page</base>
    <generator>MediaWiki 1.19.2</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Juniper Clue</namespace>
      <namespace key="5" case="first-letter">Juniper Clue talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Remote port-mirror</title>
    <ns>0</ns>
    <id>1799</id>
      <sha1>jzlwnmouuo6wq1k4jmynan2ohu9cm8m</sha1>
    <revision>
      <id>4151</id>
      <timestamp>2011-01-24T10:29:34Z</timestamp>
      <contributor>
        <username>Eusahues</username>
        <id>1518</id>
      </contributor>
      <minor/>
      <comment>Add note that inner IP on GRE tunnel is required router side, even if not required by alternative capture server configuration)</comment>
      <text xml:space="preserve" bytes="5679">This procedure requires a PIC or router that is capable of GRE tunneling.
'''It can also cause DoS-type consequences if you don't know what you're doing.'''  Packet capturing software such as tcpdump, ethereal, or wireshark can be run on a remote *NIX or Linux box.  In order for this to work, the remote capture server '''must not''' have a route to the packets that are being captured.

= Router Configuration =
&lt;ol&gt;
&lt;li&gt; Configure a GRE tunnel interface. (note the family inet address is required, even if not used (See alternate capture server configuration)
&lt;pre&gt;interfaces {
    gr-0/2/0 {
        unit 100 {
            tunnel {
                source 192.168.50.10;
                destination 192.168.51.20;
                ttl 10;
            }
            family inet {
                address 172.16.28.1/30;
            }
        }           
    }
}&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt; Configure forwarding.  Your rate and run-length should take into account the amount of traffic being monitored.
&lt;pre&gt;forwarding-options {
    port-mirroring {
        family inet {
            input {
                rate 1;
                run-length 1;
            }
            output {
                interface gr-0/2/0.100;
                no-filter-check;
            }
        }
    }
}&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;Configure a filter and apply it to an interface.
&lt;pre&gt;interfaces {
    t1-1/0/3:3 {
        description Customer-A;
        unit 0 {
            family inet {
                filter {
                    output capture-filter;
                }
            address 192.168.35.1/30;
        }
    }
}
...
routing-options {
    static {
        route 192.168.70.0/24 next-hop 192.168.35.2;
    }
}
...
firewall {
    family inet {
        filter capture-filter {
            term 0-capture {
                from {
                    source-address {
                        192.168.70.0/24;
                        192.168.35.0/30;
                    }
                }
                then {
                    port-mirror;
                    accept;
            }
            term 5-accept_all {
                then accept;
            }
        }
    }
}&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

= Setting up a tunnel interface on an MX DPC =
&lt;ol&gt;
&lt;li&gt; On MX series DPCs, you need to allocate a tunnel-service - for this example the interface will be gr-0/3/10:
&lt;pre&gt;fpc 0 {
    pic 3 {
        tunnel-services {
            bandwidth 1g;
        }
    }
}&lt;/pre&gt;&lt;/li&gt;

&lt;/ol&gt;
= Capture Server Configuration =
&lt;ol&gt;
&lt;li&gt; Remove your default route.
&lt;pre&gt;[root@foo]# route del -net default&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt; Configure a GRE tunnel.
&lt;pre&gt;[root@foo]# modprobe ip_gre
[root@foo]# ifconfig eth0 192.168.51.20 netmask 255.255.255.0 up
[root@foo]# ip tunnel add netb mode gre remote 192.168.50.10 local 192.168.51.20 ttl 255
[root@foo]# ip link set netb up
[root@foo]# ip addr add 172.16.28.2/30 dev netb&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt; Configure a route to the originating router.
&lt;pre&gt; [root@foo]# route add -net 192.168.50.10 netmask 255.255.255.255 gw 192.168.51.1&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt; Attempt to ping across the tunnel.
&lt;pre&gt;[root@foo]# ping 172.16.28.1
PING 172.16.28.1 (172.16.28.1) 56(84) bytes of data.
64 bytes from 172.16.28.1: icmp_seq=0 ttl=64 time=0.587 ms
64 bytes from 172.16.28.1: icmp_seq=1 ttl=64 time=0.685 ms
64 bytes from 172.16.28.1: icmp_seq=2 ttl=64 time=0.611 ms
64 bytes from 172.16.28.1: icmp_seq=3 ttl=64 time=0.595 ms

4 packets transmitted, 4 received, 0% packet loss, time 3010ms
rtt min/avg/max/mdev = 0.587/0.619/0.685/0.046 ms, pipe 2&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt; Start the traffic capture.
&lt;pre&gt;[root@foo]# tethereal -i netb
tethereal: arptype 778 not supported by libpcap - falling back to cooked socket.

Capturing on netb
 0.000000 192.168.70.5 -&gt; 10.0.45.8 UDP Source port: 49378  Destination port: 18252
 0.004236 192.168.70.5 -&gt; 10.0.45.8 UDP Source port: 49380  Destination port: 16968
 0.020132 192.168.70.5 -&gt; 10.0.45.8 UDP Source port: 49378  Destination port: 18252
 0.024303 192.168.70.5 -&gt; 10.0.45.8 UDP Source port: 49380  Destination port: 16968
 0.040096 192.168.70.5 -&gt; 10.0.45.8 UDP Source port: 49378  Destination port: 18252
 0.044314 192.168.70.5 -&gt; 10.0.45.8 UDP Source port: 49380  Destination port: 16968
 ^C
7 packets captured
[root@foo]#&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

= Capture Server Configuration (Alternate) =

As most tools (tcpdump/tshark) are able to &quot;look through&quot; the GRE, a simpler server configuration is possible.
No modification to the routing table is required, as the GRE is directed at the host, which is configured to drop them.
tcpdump/tshark/etc can be used to sniff the appropriate traffic from the relevant interface without requiring anything further from the capture server.

&lt;ol&gt;

&lt;li&gt; Drop inbound GRE to prevent ICMP unreachable response generation.
&lt;pre&gt;[root@foo]# iptables -A INPUT -p 47 -j DROP &lt;/pre&gt;&lt;/li&gt;

&lt;li&gt; Start the traffic capture.
&lt;pre&gt;

[root@foo]# tcpdump -nn -i &lt;interface&gt; host &lt;GRE source IP&gt; and ip proto 47
10:11:15.842147 IP 192.168.50.10 &gt; 192.168.51.20: GREv0, length 88: IP 192.168.70.5 &gt; 10.0.45.8: ICMP echo request, id 60517, seq 8, length 64
10:11:16.843036 IP 192.168.50.10 &gt; 192.168.51.20: GREv0, length 88: IP 192.168.70.5 &gt; 10.0.45.8: ICMP echo request, id 60517, seq 9, length 64
2 packets captured
2 packets received by filter
0 packets dropped by kernel

[root@foo]# tshark -nn -i &lt;interface&gt; host &lt;GRE source IP&gt; and ip proto 47
  0.000000 192.168.70.5 -&gt; 10.0.45.8 ICMP Echo (ping) request
  1.000552 192.168.70.5 -&gt; 10.0.45.8 ICMP Echo (ping) request
2 packets captured

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

In this example tshark (tethereal) doesn't even show the outer GRE encap, only showing the inner payload.

[[Category:Unsupported activities]]</text>
    </revision>
  </page>
</mediawiki>
